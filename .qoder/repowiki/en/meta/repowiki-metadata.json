{"knowledge_relations":[{"id":1,"source_id":"7bd2d629-4bfd-4cf4-a0ca-23429a2c319b","target_id":"7d640f14-9d35-41d0-a646-af6880620b92","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7bd2d629-4bfd-4cf4-a0ca-23429a2c319b -\u003e 7d640f14-9d35-41d0-a646-af6880620b92","gmt_create":"2025-10-24T18:16:56.930663+09:00","gmt_modified":"2025-10-24T18:16:56.930663+09:00"},{"id":2,"source_id":"7bd2d629-4bfd-4cf4-a0ca-23429a2c319b","target_id":"a79dfa1b-0b45-4405-ad20-8799ce58433f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7bd2d629-4bfd-4cf4-a0ca-23429a2c319b -\u003e a79dfa1b-0b45-4405-ad20-8799ce58433f","gmt_create":"2025-10-24T18:16:56.937713+09:00","gmt_modified":"2025-10-24T18:16:56.937713+09:00"},{"id":3,"source_id":"7bd2d629-4bfd-4cf4-a0ca-23429a2c319b","target_id":"78779344-4fa5-4a85-9d53-8d7a4002087e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7bd2d629-4bfd-4cf4-a0ca-23429a2c319b -\u003e 78779344-4fa5-4a85-9d53-8d7a4002087e","gmt_create":"2025-10-24T18:16:56.939323+09:00","gmt_modified":"2025-10-24T18:16:56.939323+09:00"},{"id":4,"source_id":"7bd2d629-4bfd-4cf4-a0ca-23429a2c319b","target_id":"ee6fcf24-8fe3-488e-b0a2-8323950fc287","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7bd2d629-4bfd-4cf4-a0ca-23429a2c319b -\u003e ee6fcf24-8fe3-488e-b0a2-8323950fc287","gmt_create":"2025-10-24T18:16:56.942856+09:00","gmt_modified":"2025-10-24T18:16:56.942856+09:00"},{"id":5,"source_id":"7eb72d55-3034-4059-9647-c9f0da4b4609","target_id":"b2bd2039-bb21-4c17-bc2a-86c4daa24ec5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7eb72d55-3034-4059-9647-c9f0da4b4609 -\u003e b2bd2039-bb21-4c17-bc2a-86c4daa24ec5","gmt_create":"2025-10-24T18:16:56.946576+09:00","gmt_modified":"2025-10-24T18:16:56.946576+09:00"},{"id":6,"source_id":"7eb72d55-3034-4059-9647-c9f0da4b4609","target_id":"874695b3-f3f1-43da-9ae7-d2dd14e7f92a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7eb72d55-3034-4059-9647-c9f0da4b4609 -\u003e 874695b3-f3f1-43da-9ae7-d2dd14e7f92a","gmt_create":"2025-10-24T18:16:56.950081+09:00","gmt_modified":"2025-10-24T18:16:56.950081+09:00"},{"id":7,"source_id":"7eb72d55-3034-4059-9647-c9f0da4b4609","target_id":"42f8e8a8-6ac4-4fb3-aa1a-a3521b44001b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7eb72d55-3034-4059-9647-c9f0da4b4609 -\u003e 42f8e8a8-6ac4-4fb3-aa1a-a3521b44001b","gmt_create":"2025-10-24T18:16:56.950818+09:00","gmt_modified":"2025-10-24T18:16:56.950819+09:00"},{"id":8,"source_id":"7eb72d55-3034-4059-9647-c9f0da4b4609","target_id":"a6fdac9b-a2b6-4aed-a9b4-6993877caaa2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7eb72d55-3034-4059-9647-c9f0da4b4609 -\u003e a6fdac9b-a2b6-4aed-a9b4-6993877caaa2","gmt_create":"2025-10-24T18:16:56.951274+09:00","gmt_modified":"2025-10-24T18:16:56.951274+09:00"},{"id":9,"source_id":"9ebb0078-f14d-4f2f-9aa9-95d67d3cc279","target_id":"73bb2de4-3132-4a3a-bac7-c6d3003b71a0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9ebb0078-f14d-4f2f-9aa9-95d67d3cc279 -\u003e 73bb2de4-3132-4a3a-bac7-c6d3003b71a0","gmt_create":"2025-10-24T18:16:56.952035+09:00","gmt_modified":"2025-10-24T18:16:56.952035+09:00"},{"id":10,"source_id":"9ebb0078-f14d-4f2f-9aa9-95d67d3cc279","target_id":"9616a584-220d-453f-ada5-6d5f42527b13","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9ebb0078-f14d-4f2f-9aa9-95d67d3cc279 -\u003e 9616a584-220d-453f-ada5-6d5f42527b13","gmt_create":"2025-10-24T18:16:56.952515+09:00","gmt_modified":"2025-10-24T18:16:56.952515+09:00"},{"id":11,"source_id":"9ebb0078-f14d-4f2f-9aa9-95d67d3cc279","target_id":"754ea300-d714-4fe3-82c7-5085b61876b5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9ebb0078-f14d-4f2f-9aa9-95d67d3cc279 -\u003e 754ea300-d714-4fe3-82c7-5085b61876b5","gmt_create":"2025-10-24T18:16:56.953051+09:00","gmt_modified":"2025-10-24T18:16:56.953051+09:00"},{"id":12,"source_id":"1fee7964-0e3b-4c71-9d16-e6d0f8ccff38","target_id":"c569bc88-f95c-4982-8a86-e0981ccf490f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1fee7964-0e3b-4c71-9d16-e6d0f8ccff38 -\u003e c569bc88-f95c-4982-8a86-e0981ccf490f","gmt_create":"2025-10-24T18:16:56.953705+09:00","gmt_modified":"2025-10-24T18:16:56.953705+09:00"},{"id":13,"source_id":"1fee7964-0e3b-4c71-9d16-e6d0f8ccff38","target_id":"a7e7571e-05b1-4dec-a7e7-be43f30a2eb7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1fee7964-0e3b-4c71-9d16-e6d0f8ccff38 -\u003e a7e7571e-05b1-4dec-a7e7-be43f30a2eb7","gmt_create":"2025-10-24T18:16:56.954263+09:00","gmt_modified":"2025-10-24T18:16:56.954263+09:00"},{"id":14,"source_id":"1fee7964-0e3b-4c71-9d16-e6d0f8ccff38","target_id":"5cfbc637-65a8-42b0-a7a5-ed58a4bb6a25","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1fee7964-0e3b-4c71-9d16-e6d0f8ccff38 -\u003e 5cfbc637-65a8-42b0-a7a5-ed58a4bb6a25","gmt_create":"2025-10-24T18:16:56.95502+09:00","gmt_modified":"2025-10-24T18:16:56.955021+09:00"},{"id":15,"source_id":"1fee7964-0e3b-4c71-9d16-e6d0f8ccff38","target_id":"c9351558-4e10-4402-9ce7-3933e651c31f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1fee7964-0e3b-4c71-9d16-e6d0f8ccff38 -\u003e c9351558-4e10-4402-9ce7-3933e651c31f","gmt_create":"2025-10-24T18:16:56.956107+09:00","gmt_modified":"2025-10-24T18:16:56.956107+09:00"},{"id":16,"source_id":"1fee7964-0e3b-4c71-9d16-e6d0f8ccff38","target_id":"6f88004c-830a-4fb6-9dd9-0d4104ce05f7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1fee7964-0e3b-4c71-9d16-e6d0f8ccff38 -\u003e 6f88004c-830a-4fb6-9dd9-0d4104ce05f7","gmt_create":"2025-10-24T18:16:56.956769+09:00","gmt_modified":"2025-10-24T18:16:56.956769+09:00"},{"id":17,"source_id":"6a99d88c-8652-4e2f-9eb8-3e610763b8c4","target_id":"029f2f7d-e171-434b-bf61-2c79dfbd03ab","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6a99d88c-8652-4e2f-9eb8-3e610763b8c4 -\u003e 029f2f7d-e171-434b-bf61-2c79dfbd03ab","gmt_create":"2025-10-24T18:16:56.957386+09:00","gmt_modified":"2025-10-24T18:16:56.957386+09:00"},{"id":18,"source_id":"6a99d88c-8652-4e2f-9eb8-3e610763b8c4","target_id":"b232f1bb-42b3-4ff2-96f6-04014017d51f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6a99d88c-8652-4e2f-9eb8-3e610763b8c4 -\u003e b232f1bb-42b3-4ff2-96f6-04014017d51f","gmt_create":"2025-10-24T18:16:56.958218+09:00","gmt_modified":"2025-10-24T18:16:56.958218+09:00"},{"id":19,"source_id":"6a99d88c-8652-4e2f-9eb8-3e610763b8c4","target_id":"3b4544b8-4322-4294-8fcc-8e7fa010d228","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6a99d88c-8652-4e2f-9eb8-3e610763b8c4 -\u003e 3b4544b8-4322-4294-8fcc-8e7fa010d228","gmt_create":"2025-10-24T18:16:56.959087+09:00","gmt_modified":"2025-10-24T18:16:56.959087+09:00"},{"id":20,"source_id":"a79dfa1b-0b45-4405-ad20-8799ce58433f","target_id":"b8ab5d57-9b6d-495f-9f95-2c5a29696a00","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a79dfa1b-0b45-4405-ad20-8799ce58433f -\u003e b8ab5d57-9b6d-495f-9f95-2c5a29696a00","gmt_create":"2025-10-24T18:16:56.960095+09:00","gmt_modified":"2025-10-24T18:16:56.960095+09:00"},{"id":21,"source_id":"a79dfa1b-0b45-4405-ad20-8799ce58433f","target_id":"43216d2e-367d-4fce-a93f-557427f4b2d1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a79dfa1b-0b45-4405-ad20-8799ce58433f -\u003e 43216d2e-367d-4fce-a93f-557427f4b2d1","gmt_create":"2025-10-24T18:16:56.960779+09:00","gmt_modified":"2025-10-24T18:16:56.960779+09:00"},{"id":22,"source_id":"a79dfa1b-0b45-4405-ad20-8799ce58433f","target_id":"ab9d51be-017f-441a-83c3-9e2ad0677ce9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a79dfa1b-0b45-4405-ad20-8799ce58433f -\u003e ab9d51be-017f-441a-83c3-9e2ad0677ce9","gmt_create":"2025-10-24T18:16:56.961425+09:00","gmt_modified":"2025-10-24T18:16:56.961425+09:00"},{"id":23,"source_id":"a79dfa1b-0b45-4405-ad20-8799ce58433f","target_id":"9d7c8cbc-c21a-4cbe-8cc7-32abae763b23","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a79dfa1b-0b45-4405-ad20-8799ce58433f -\u003e 9d7c8cbc-c21a-4cbe-8cc7-32abae763b23","gmt_create":"2025-10-24T18:16:56.962005+09:00","gmt_modified":"2025-10-24T18:16:56.962005+09:00"},{"id":24,"source_id":"a79dfa1b-0b45-4405-ad20-8799ce58433f","target_id":"724f52bc-5037-4d17-815d-00fd7bfac3c5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a79dfa1b-0b45-4405-ad20-8799ce58433f -\u003e 724f52bc-5037-4d17-815d-00fd7bfac3c5","gmt_create":"2025-10-24T18:16:56.963099+09:00","gmt_modified":"2025-10-24T18:16:56.963099+09:00"}],"wiki_catalogs":[{"id":"1efceeac-279a-4374-a79d-f3ed64f50ee3","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"System Overview","description":"system-overview","prompt":"Create comprehensive content for the System Overview section focused on the AI-Powered Amazon Product Assistant. Explain its purpose as a full-stack RAG-based conversational assistant for discovering and recommending Amazon Electronics products. Describe the high-level architecture including the Streamlit frontend, FastAPI backend, Qdrant vector database, and integration with OpenAI and LangSmith. Highlight key features such as hybrid search, structured outputs, and observability. Document the technology stack (Python, FastAPI, Streamlit, Docker) and explain how components interact to deliver natural language product assistance. Include conceptual diagrams illustrating system context and data flow. Provide real-world use cases like semantic product search and personalized recommendations. Make this section accessible to newcomers while offering technical depth for experienced developers evaluating the system design.","progress_status":"completed","dependent_files":"README.md,documentation/ARCHITECTURE.md","gmt_create":"2025-10-24T18:02:30.152559+09:00","gmt_modified":"2025-10-24T18:05:18.311527+09:00","raw_data":"WikiEncrypted:gWB8HBj+8+/15rQhXgtMjECeCGuLoR2IwruDlfaI6j3yrxjzUYfuy/PkXL4s2fe2Q/+ElQvzrakKLa+r4Z4VhNnAF2F2qnko2/QRvNk016OrNepY7slgrwwkN6Z4zE0zivcwUareFMoNnJSm0/XbOt4in2jHujmK0MejvRUzdg0gdMtQAp/FFE448AFXi71tfyyvexegLLAl8FIJZ4KU6s8x8WZ3MN7bYB81nUlYCpk6h3rTfvU1KlQKu8Yh6BaCpCmenjR0MxcrfoA7aK/4ZDICu56CMzwcs/zN1S7E9T0h+PNxXDwr8z2Y6FYDu4pmaoRIQCCSEkZT3Omw9UiyOpFdF9RmHO1Lh9HeBSO0AuCH9KoK1QdwkKbfBnIAKzzhCp1v/T72hBFhp+UubJ/rKqWxVzOUG+9z1IzEnDJc7mEjIx8Z9T6QE2weUfbVwK1Eq4IGNI/HL5yv2nqIlS41WvpT/kccR3pJHGFwlYCh0bna5+/tmHy3z5vem5peM9fMK57IzvCYxxJKAiDpnYWxuuTPNffngzaRMKtIlAuCXiMJZDaMYVVpnuF0/ZRM/ehRKhGaw5ysCjMcY2Kcz26VJDQJJ/U3VVBpRmGFx1SoNNYnkiNZjH1tYXQPoPb7OK1R6dGwBeWnT1a5WCXxJ5XeYRDxI8b4KUx/8U49xrjmnNHL9fFVARp6B5tT7Tcaseet29tA9Zp/HiM/giBrQ+NeuxMmQ2uuZVIe5EFV8TJjanWpLTSvnlv8+Ule41sat7Tb8vDJHnXOFrfAkc8U6GKc6wE+o8v4jjTiQg2YFuqSOYapYUBQGCBmyxjDII3WI8vs8uZK5ORMgAxsdNq5PxXZmxzcJYOhquuiHkhW91nq6F1cl70Kx7GfloJs8EtrUAULmc3ifYjeP6PoCgQZi0Uumh7AH+Eq+gCHJb4V0UvTwrl9NIpqv4gbaRm2uLV0XzeJtoJ+NHdsa1W8rmMVfFW4N5y72JJSSeV7PHWGR161tPF6Gxo6GRI0E7D1F0utKD7AO+5ojER8torduuimxXA11lKXepbRwWwVjKtTLa/2IUdfaOwO+jcuTjx1CcjeAZLN4kEVSR0jZAYTqemRryJWwc9Ktl+KpWFnje81uDBUZtPN9NSNuWYBCN7Crhk2itx2x1Ttbm8xooTkcCGWrykZ5e55GbCP/an4eiVbjfDTSD0BZ2n0xAhKCYD7hxIJcrymPF8Y/D75RXe0MrND4YKV1zox1NvnmM37BeoPGHggeOEeOhxoiOlk8aAFgGbtDw64eaLc/95gS3t3pNgl1OMFW7zpUIYxBboXiNYlzsy/IzkHSyhoilgPlCJPLWLmnEJE+oiQ+ZX3yiSQfKEAKAqHuMlzi6f3d7YoPkbxQeEJoe7dNbHgNlN49o5xqJwkmKaCAXrbtD7w56ZxoNnHDxktG6OFX8JF+QYkNIFJge9AGbcHb953NZ/3Biui2JSV3XDFKnTEZ1nDGOk6xLhTmm4KybJtZZmYFn59/wplBx4FPEoo5lJvrmFXomhrXnYAeeV88RNoc1wc+/JcwaJhofRwDJ9Td0GLisb3JKjSyC1gFyI="},{"id":"bf6a91db-35ad-4cfc-a2eb-cfddab786e78","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Hybrid Search","description":"hybrid-search","prompt":"Develop detailed content for the Hybrid Search feature focused on the implementation of semantic (vector) and keyword (BM25) retrieval with RRF fusion. Explain how the retrieve_data function in retrieval_generation.py performs dual prefetch queries against Qdrant using both text embeddings and BM25 token matching. Detail the FusionQuery with RRF (Reciprocal Rank Fusion) that combines results from both retrieval methods to improve relevance. Include code examples showing the Prefetch configuration for both semantic and keyword search, and explain how similarity scores are aggregated. Document performance considerations such as query latency, result diversity, and tuning k-values for optimal retrieval. Address common issues like handling empty results or embedding generation failures, and provide debugging tips using LangSmith traces.","parent_id":"a33bbb08-d231-4945-bcc8-8ec66fc51cbd","progress_status":"completed","dependent_files":"src/api/rag/retrieval_generation.py","gmt_create":"2025-10-24T18:02:55.293066+09:00","gmt_modified":"2025-10-24T18:08:24.439711+09:00","raw_data":"WikiEncrypted:L7OndHh2dwLmabLWQjqqMi3ucSiQSacC7LBhl9afhDMsUrfcco+XbrnJWakCU2oijMN6+fdesHuoqH5CB7Mxyw1jWTCZhWERVfjLf5MA9LJQAfP8y9pnXscGZbburuTFtaImH72kE6fMhyR2NQv/mVBJ9AFGDBW9zoPA3bPbRkJ71jancMjxmIFw9Tozz9coSvklcmw0+pjhnvNMtAQtNX7NX8NOfxyI81MYTiFnBavIbN7rXHWLkAXiQaAPOV+vCXbkc8W+RUHHeBGNQfCd2QZXGeO4FWujrK8RuC0UNRbOFFTq6rukRNaZAbrhHypol5EFf7qi4iPgditqS/u6dcjffdRATMvX08uKvBU/ntZHvqxj2CVW1hWQp1+u3T6VBsyoi7PLGap/y1Phctiz1PDcnkAzi1xdhZJf53hBhE9Cw1ErQtVHWyNMvhiGWVuVKjK/K5hnJf5skyOcVdLVGmVYcpCb4mIeSFQpeaujmwFBSYIg+HFwtVj78Sh9TExvclTeE1/BnUH1tmgZbUq+ZVsKIIYm+LUkIQ0uQ8rCRsgHExrz4EFgbWKfDIfj7Crx8OsEb/n25WygpGnjBDZ+i3LO8JQpQGDWJW7JfQv358aYCZPdlE/VA4RNs+xHAqjECpu6kxQCCFrqrHvsl+xtK5r8NjZKwU96PcUgQSU28sLh9nFTVfiPNC+UaAaXwV9yNOFTkiRsXShekciNO3xOY577/utCOKBYiShdoY5ShmvRvc3asLQx9ecK80QOVLW26sTRCeoz+cfGPrUxP9tAxGuNG0/j2brfdMlO2TXOlt59ZVOMK3G0Bly88OMHS11bT9OdkG3iKVTQCVKrL4l448Jtf5gB+u8zgLGAhmKrgYUcqQJFvD6WBYMc9Y84I49nlv7cHa1nRdiKYIMHwFBlO7+dAiqBKnrKEmtox76cRanBUVF+6WuPxxpWINtl17JxBVW4VYByUpbQC//YKs0E3Wql9qpR5xLWLt1/iYVLz+dQ19XKccTP9YkFocHuITnm70P28WVrLbCt8cAeqQ+gM/RnmPVcJuO6R19Fur1ihgaiOH8ASrOt8MKs71PlcLRJ7S/mslD8wYY2aCXVU4Y2prYVSLwRV5U33khAImtCGTQtkNZe+Wti7JLHxaSTNnouZSxvWXrf8eG3pjdRU1Ql7v27U0narArhswe3mJDmuBiTMXymcnY+4SLKoPPM2oX4Tjpu7oi7n979oj3W5l73C83Izzy7eklUMtXwl/hIKWosnSUVLHpdm3SYIjqO+K+hOHgfgP6rRZO2Hqaopa3iDrPAxDEnXbFKVZI+dFcOLgLuTAyTQHNJnKj9c7RN+rRhgOhVAr3PTNNsYI+PMRFjrx1RZlt0xViaEMa/kqGzMSETd7p75SJ8XvYmqkIGbO/M+DGVboOYtIA2H4rOisCJAUyP83AR7OFwt7jIwREnB1tFUKcoowGfFmaO/ObTRyW+BBk1zITUGq0I7Nx9uuzwSA==","layer_level":1},{"id":"f62bed5c-9780-474b-8dd7-b5ca61e16541","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Frontend Architecture","description":"architecture-frontend","prompt":"Create architectural documentation for the Streamlit frontend component of the AI-Powered Amazon Product Assistant. Describe the UI layout with main chat area and product suggestions sidebar, session state management using st.session_state for conversation history and context persistence, and API integration pattern with the FastAPI backend. Document the configuration mechanism via Pydantic Settings in src/chatbot_ui/core/config.py, including the API_URL setting for service communication. Explain the request-response flow: user input via st.chat_input → HTTP POST to /rag endpoint → response rendering in chat and sidebar. Detail error handling strategies for connection failures, timeouts, and malformed responses. Include UI interaction patterns, state management lifecycle, and styling considerations. Address performance implications of real-time updates and image rendering.","parent_id":"2209cead-56be-4095-b1a0-8101d26d65f9","progress_status":"completed","dependent_files":"src/chatbot_ui/app.py,src/chatbot_ui/core/config.py","gmt_create":"2025-10-24T18:02:57.52117+09:00","gmt_modified":"2025-10-24T18:09:00.551843+09:00","raw_data":"WikiEncrypted:EPw1VhZSv2AMLpYzHbCG5UOWtvXJekVz3OIlprKQ8NdRRzy6JOsj2PkUGNsYoepyQzOnvacBPAy4B0vaVaXK29/jHP+Alp6xa3UURrkuOYU7bZ5KHkg/lPiV5T5UZxbe2gFg++Rxk0EAoQhv4mps0QIJteUWu2TACjEB69NvXNzEU0fotVniK4+CkaIojRqwjZEax06Ua30PGQDuZcp0dk26w20RZ2uc+LcdLbIvJpxZYEKzv+6eHVFFj5iGswgwjQLKoHbQQrV+Glj8YaXCPAn5qw8CkvdhocUMd5Au/danXGjOUeSgn8MW4aAkKVs9Ry5uXFwn2PkjYEPRkwum+PxFUB6Fj6jL/+vvgOQVAh9F/+FFTmXZiO0myqj385wxC0sI5ce12f9o/VZYbcuGwI2qtg+j5sVavPQOqLMO6jzLvn2dgEmsiwVuLmX13rt97Iw/71NRPC29Dkbn4T/aZvJ8sfGjKN8r/4+AkYjHRghzsJyk9nGYp2GarY0jvJZiMxiYKZQ3cw0zG3s1v5ZW7Me08TB0eFFuujaNudAPhOQhh4IfdQrBP6fZAJqOTyMtW8XUFw/oZfUM9hFgl6X+RLVgsZ8ek2X6gz/dBrQ6spK62IZ2ErE4UPQKR8wRaw/hmUK1U8hDs8kMxdZEAzSbfs4ATs5Y1f3t5Z6AQuVxAcX/0IegHLR9OpIuokAZyN5B2bTwCtAjNmeZRq57HmsGcY0fAjMmUzASi1AKufElR8tC5cBgAY26fLdu9zWi7pNjddelCPh8HGAKjsuuL0Nd0GNHxFDyDqdw5KoqZRNUxEKH24i9IELWOJHe5zD+0azp2uARgOcbivIeb3kOdO4ePbZH1HJqcPVuGr8lIKy4RanEp+Poxm9NcWZrxdgBUvPA0npDmb9JI0o3N5ewi+1xiPL7YWmG/MWG2Z5JibqMabV19GGqKOBQDPi0SeXArbG+71b2oOIT9L15wcw7OVSxr/4AAC9sqbpkFw1r36yOxZXB3/Xq/AH4HNE+Lsw17cPfUYFKihtGy5mtiah77kl+3bvMfhjiXrKvQgHSOtgm0DfXl2lm27BJwzFbjEi/ZLvkj3Ov90yHSk6tWefWFS9uR4j4+AT6BfMegtG7c5eyxDBRWRK7WTdkSKq+nw3Z09DwnIi3kDitnp1RCws9ogEzt1+1aHMlotqNUY054Roc9iHa0bNNxvnM1Xr7xsuRRrBYNnBuj1VjyN6IaVfypY0vi/cu6sPC1nA3FUnulwT2vcEp4f1flUhaIFLEgdJkvVdjkzc2sL14/J3BYOvU5gkTiJaFrk+C3yb15a9jstu51wy1k96592a3J4VLeQPz9veSjb3srbTQDaQQcZE8nYAB5ZyrNzGbZUiSnJPEqk+q9eoODFIIT0DTB3yMq1wrOQM3JbMaLN16BBNGePq8cAeyiaGN8H9egNU3u9Fb44bcnjZG7RjNnhFHc4o27gD5MoSOsWzWYEQ8MnSA3BIMQjSNhbqkbIIuSSlbnpRb9n0yiCfiEHRroNnDYuL26mGHgW2V7vNbH1VYG6r5BInikqdhOuWYSEAjUlFR7+q+iQ+zMLTcU5F1U9IDK+ie2t/vrRRVfECpd9458TnIYXPhoP61BYxsVubgET+8BI707U7sU2pdIEcUWEAdEHO47k5sjulB","layer_level":1},{"id":"dcc77d61-638d-40be-80c4-acbce2bad281","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Project Structure","description":"project-structure","prompt":"Create comprehensive content for the Project Structure section focused on the organization of the AI-Powered-Amazon-Product-Assistant codebase. Explain the purpose and contents of each top-level directory: src/ for production code, notebooks/ for experimental prototyping, tests/ for validation, and documentation/ for technical guides. Detail the internal structure of src/, including the separation between the FastAPI backend (api/) and Streamlit frontend (chatbot_ui/). Describe the role of core modules like config.py and the RAG pipeline implementation. Illustrate how notebooks are organized by development phase (phase_1 to phase_3) to reflect iterative RAG system development. Provide guidance on navigating the codebase, identifying entry points, and understanding component ownership. Include best practices for adding new modules and maintaining separation of concerns.","parent_id":"4b430710-e83e-42b7-99c1-6cefef190425","progress_status":"completed","dependent_files":"src/,notebooks/,tests/","gmt_create":"2025-10-24T18:03:06.135342+09:00","gmt_modified":"2025-10-24T18:09:34.080666+09:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cnz+8KHaKkA/0g0nHA55sA3n4CbOFf7L6jUb0A9JBGj+D1iawidXtVOcQH/0iJe3HJcGKWZ5e0mEtjfE6pqhkKfR8xIXdBg4ERxXMt+GS8AasZAIy12Mw0XOv+P90sq7sHPc88qXW6dmtuatEZkPhj5sAKunJJQKujvbbGCjtI32PVgwAh3UC/XMlEBr57lvsUhP9uPXSwAlqrOZ2r6nFv7yoUbJ9KC1l28vgWQlmMwHEyMC+7vyUd8AAXkK1OtUgnqeu3QjTZV4aDuTVGtaC+MRarWMbz6D5Wq80goH4E9y68k+2u+HmWTkH9YeYzMScwWDdIg4YBnDZNGhMwGWD2ZhYRjzdrSbdfrMcxNNo4LNQ7k3KGRUM2Btk5tsKJ7yUmCxFTbudoKZKtZHI++24VZCuVZurh6yPuveBtDMwZB6JKAKvW4rg+aLRfZyoxpL2hnzfSSl8BgL6bBMGxfTNVTbU00//RPEY24AA5BVHY1cBleZsbSjpNjEXPo77fLMjnkg/idPZSQ486xNX/pXQ/g1gjn15vQx98Yu8qi/CF/kba7cEWzO3p5UbYDR+y7ALlAl6SCqg1BqJWybug//FMDZbrogP0OlOH9JrEiEqhLmhQ2EB84PUJ8QJFXRdBVT5egQwzOjJ13mBLKuqzc76/Kv7fkfvOsdHX3RBzaFSmgV8dMNzD3yaHZYbY4nQVEpgWChimkm/DF9eK5SKoqvukcDENPIyjXIB5xdo+s0Y4IXanaAmrqRE3TtqwKConYasI5Lg5ZDwJVrsBMpdSHv2/Y5GOFSVybMNcgllyrEqY9eaWOsOiOCBIclA9kDr2kwVt3pWpiqJYBp5ggsFUawCfGqQmUrtKUOGWULCR68T1+1lrj7JH+QaPwQVHtC94mREaoBmXspk+SO/24x6YQd92Rs2Q50ZzTOJGG4l1Y3Wvan2BkKgLEMlERyLx+rKzUyQszf2nWhdkG84CQ3vvt+DgEpI2OfioK/z+Ziqlv1GTVbE/M42wTaMVMdGsdFepK2gxEaQfRKVYmR0j/tBVuiGuCXsDz4b5RVsOTd9qmYP4z0+8XN+jxs9vefkkjmPvHKEiucdpGmYKD4osqkvO5lArgK+l+BZZdkzFKluMcET0hHSpqPUMYeTigXnctqV2Sm+P3YNanmMKGP8o+vnVCG7k4PbJ4bF4+2ri5hDXziytWnFV0AcPMoutwBbWSnSbydEdO7lFhyZyivXvaAh/LhyQHy3GI4zOUaSLy92wZPbHGq7XKso33ofYsLlce+Wi3mjmMHCIi+Pc8Aq6U2Sm7xNROXs16MJm7a0q35G+yJY69bh5jq+uel4VubyRBUnjMqe6zAhz3vd8sHsVgpwv/DzZFez7ppTwDiN1wSMipnpM0ufocPIAR2YiMLpuP31WPUJ5PAf9JODvmychX0Qor5HfqUt0Z09NuYviBzw9r1aPEAPqy8rC/7LM1z+DTfh9R6UP+squIjljvl/5E0CfKPR+Fs3P85j6hkX9JGkfqxm/wYO","layer_level":1},{"id":"5f141d58-41e5-4f2d-b34d-83b4fbf78ab2","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"RAGAS Evaluation Framework","description":"ragas-evaluation-framework","prompt":"Develop detailed content for the RAGAS Evaluation Framework focused on assessing the quality of the RAG system's retrieval and generation components. Explain how RAGAS metrics such as IDBasedContextPrecision, IDBasedContextRecall, Faithfulness, and ResponseRelevancy are implemented in eval_retriever.py to evaluate context relevance and answer accuracy. Document the integration of LangchainLLMWrapper and LangchainEmbeddingsWrapper with GPT-4.1-mini and text-embedding-3-small models for metric computation. Provide concrete examples from the code showing how SingleTurnSample is constructed from run outputs and evaluation examples. Describe the asynchronous scoring functions (ragas_faithfulness, ragas_responce_relevancy, etc.) and their role in computing per-query metrics. Include guidance on interpreting metric scores to identify retrieval weaknesses or generation inaccuracies. Address common issues such as missing context IDs or mismatched reference sets, and provide troubleshooting tips for failed evaluations.","parent_id":"dc96fe26-acae-4d06-8ff1-632a06506d70","progress_status":"completed","dependent_files":"evals/eval_retriever.py","gmt_create":"2025-10-24T18:03:16.011441+09:00","gmt_modified":"2025-10-24T18:10:03.181442+09:00","raw_data":"WikiEncrypted:e4lam59RM66GvwYNUvSolEssDorZhto03Z4V2jGUoWfwMGemnX+Camanq4M6hj07Vf4+MrR4wjZRt08wUjXaTVLc4MAGVmv2qBMwyUpFKESSb45inALhUvgkTlqvctsPp5vUg7HH2NAuUYGrGjwAr0EidUtqlmJxgv6hmpBjSqJgpDLGCQM6/KX2jNQ6GhabpkQj/zxoNGQt4p1HYugOK5bc6MqAwm7ji1sGPRRRLQIWDw+zrESH8X6xySnZNmYq4gaQrD5H2BcFVpf/hKo5WHfbvkvuZk78GDJtuP3q7DMtatgtAfdVGsjLOw3w1kAYJr2Kkw5O1Sl5uOJF/8bY64YfQ2Jjm5GzL9WwwMNv4qlwUzmg0fFnpTqmVxE5NhQ011RoGZ9XFSg7kGRtk+fT2tbgsdgvda2fUTvXKZNE2ONNmotgFTRhTgksVpcpUtcogXOXvUBtEWybJMks+Z+dPnSeU+3SojGUM4g49xDldn1vI2WeZApJljUYx2CFQPK9ZyW6osAWjZDshSXVDvyUBeoMt3EAqiWAvMHccQabsQtBV+7tSjLXIIwzr/tEFso47lgTJ9az0qfUws6bbUxBfPRUW3Lje8ItQpFmciDlioaFhaJOVjqwSfoXGXMY6pJ92GLFR7lXFGTj+/yNTIYMCyJX58BZXXvydNhdpwiDcMbpnzSwucy/3kA8x7CZz9Zlq4zgDLDnNU9X/59skx7N4MYmi5yhoIpt/5g3i7mkd2UpSW3aiz2VMoXOdggKqz1HCDMqz5uATaT2Z3OGuzc8TdfrE2oKAQGsiWxqNialDgHnELFAb8CYnhENknn2tzDg6zqce2+IirO8T0MthevB7RG1ox+Oh3l3x+zX+q0uMR5+4apPSTxp7VZ5RwQ37dYzMmEOoX7C3pTeQbOfILaaSDOLRuBUmB45KHPaVsm26ONAEAW2g3kfH7SrVwHDct68qzm4DjQ4fBHm6h80XSeY1cwWQ5w3UvtgB+i9SFOHSwlEgT/mO1zWAGLsLpkvVNd5SEEef+igsi7acyHR+ukk0JLJO2UuF84EPLd6fqG0+OSdpFlbohkgp+RF2HzQPSkbpqAxTVU9bkEElZkokX5fA8234Lxnq41y/i//hKUPTdR+7sw0SdV8OKCHFrQ0tnWygDPgc2wF5ouyp7TOuhWG2rGqaLMA2XQfUzTktQwl8O0jacvJsXJeKpuNwM2tdynnT0rSXXgWwW0y2ZxxpGC7DaZBb3iC0mV6aTu1Yyrt1Met/fkgd7Jiuz61/djMk4I7uKpuPemN8DQGBU8ySdU/HGajgTlYPo+VTKmQ+kb2A8CV0fOeiHQ1npyxQapNf2y8Ms9EADLOwS1O60glgqH01+07I4vud5n0aq2ONIBzzvYMV/GDzVtZCaJ//X6dn7o8z+TZK0TNbeNKTwtuwNBiPH7TaMaU5bcunQy+SvHwD653tb85RxNe6d+dyjLsTaNB9gMW+INlXBVi1xHt1l0lZ1WLgtf2CPcqw7BNcduRKY/dMNpBy11HmqSOBLWKNeVXL9SIpz+1EM9DMyM1gxpm7JTjQEQVsJcm9izLYbA5UIIpS8mfYMJWB+n0VqzuGCY5+YCfgS63cl+5W1o1T1b+dqhGcMcABLtER2e2x9QohqAxUbqHdH4lZgCiZCZTZnScp967122RcJvtL/9c9TDbw+F3lPAIHvf+hVnLlt1Ns3CUOUuwEpFKkTYR/GQMcc58gMFiSg8wJzidresKJsD3hw==","layer_level":1},{"id":"4a4b70da-8fd4-4564-8887-e5a91c54c875","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Prompt Engineering","description":"prompt-engineering","prompt":"Develop detailed content for prompt engineering using YAML templates and the prompt management system. Explain how the prompt_template_config function loads Jinja2 templates from YAML configuration files, including error handling for missing files, invalid YAML, and template parsing errors. Describe the structure of the retrieval_generation.yaml file and how template variables like preprocessed_context and question are used. Provide examples of how to create and register new prompts in the YAML configuration. Document best practices for prompt design, including clear instructions, few-shot examples, and output formatting guidelines. Explain how prompts are integrated into the RAG pipeline through the build_prompt function. Address common issues such as template rendering failures and versioning strategies. Include performance considerations like template loading caching and validation.","parent_id":"9da8dd7b-d46b-4d02-83d2-513b804c5540","progress_status":"completed","dependent_files":"src/api/rag/utils/prompt_management.py,src/api/rag/prompts/retrieval_generation.yaml","gmt_create":"2025-10-24T18:03:18.610856+09:00","gmt_modified":"2025-10-24T18:10:02.088893+09:00","raw_data":"WikiEncrypted:N1u71tmr7wEQ5xElh+MsxEjNvdcQrDG0XV2qVlw5VRjuhh7ix+t19oJi5io94rc7EMrymw9y+JEP/hEBMt8SIQSTp/XYgAGtE0MzuKVdzA29LgpExiqSt/PxC+e6RiCN740ilwJm6KUvUbO0kt8qb4AflT2YnvDZ6uQbwJkFOR8H13lQ5TrE3LfJlypc+hRv8jn+Opoljb3qfQRkYrkWgCxRNytwa8oeoTQ557xoh18vjmIuSIV7HI24gW9bwuUpBPSZSlPW1BWiQfmJh2iiUcHuPukXcKeaVpESO3rMKTetNLmlcueefqm8/iBau8H3hO2yIYU9JmMc2yTftrnqI+lULe7fc+F0kbZe2UitGgk5spq8WANt3PbMUbv01HXFDu6OAZeSO7TUp3ocvwxowB8ngYCkQ9nHI/6iDSrFGTHxRQG1hEN3Io9rSVeKsZe08hFkmmbw8zzvRI6dsqgbdlY/H/H1YftxoLcy/tNKJ+4x0LVX1iF1lGeXuD246ZAhaYi2iSGH2tWQPKbtJGjgxewXrDdnCSY0vZSujCbzXVkpLWNy+K/zsRFTUbfFDPK2rLW0w83OsdzUwgnT61raZyxDxZdRx5yK7PCu4Ok+4UkM/qo9O2Y0i8/SHwIMJ9m8ILRljLA2oY7HWSAjHCcp+9yrUXuqA2BBYS4WZCUxBEZwkcRJkx2YKG/bk7TbujdZ8e77tF5kD6VU2OH8SZc6brGhqx56hYJBBH1d7vWwsNFx5v/BmY34c/0i3e69GMn6QulDqhZMHpXcoZ53mBhzVzroO0p19klm0FNrxX8fRiBbkElapd9Js8jg06qTsD4e3jpJVzOl+uudxfgc1/U48xROMXN+YikhghZg4eo3YVPiy3pbtsj3pl2diLofuNz+buXv/qeRwi5fZQ9Qy91j/OqqXFg1GVp17Lud6JlWikGiI2mOjHMG8cBsAmAcI5GijCfAJBjdAsi6BMYZ1V24YnaELsjmQGfpj+Kr9+OIM5IsHGo4yBQnFFZmsa/KjBgOzfTiNsBBm983TZ8lCk7jfz6TY7uD0c2c6y6aNs5JDlEnRpA/6FyIOQsEMzdj3zA+5odEEfeYaCYikjvOM7nIJz+jiqjhpOSh+JM0aITOxdBpF4yaFfvGsW6QuvfNII/k2BaS+umPMJMP2ZfrS21VTgYKBHhwYXY3aA4ya6bO/9fV4hLpS7npmJ1ucPatKipkJTsRNrlRDIIHPXuuolCCzIZyi6pHovuVU1wWox6zf5aRzEkmNCjHCHbQYdxsJJMG09u+bUhHkslC0qdoL4hlqiMiMksfEUbWAbdCEHep91la9AtQgPP17CUIyE8GhQeNqvHYgQzgTR7BLY1p5XwH435SPpCblO+La80kZC1EmsIgdzFxxP2kooiF9NRHtkS6fmw10hp9XuyMFL2Ez5OjqnCDsK3Oa7nmyMDlyClFndx6/1v7usSF398M+V7i+KFe4nrG8srBl2MXcQtV0DwkbKJOkVi29mgCUBIImaLqfce7nUpvJqLqoOtfL71zncQZoGNnA8QWYQSAH4N9xeg7/V1IkT3zphuHKQ0E9J5ad27H5kg4P1vVkQ/B+Sn17GFmJcdPfbtyacniGry10lKWr/DyK3EvvkcB1oSgXRK38Gs=","layer_level":1},{"id":"d1960a4c-1eab-4696-9e08-041587bf2640","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"API Endpoints","description":"architecture-backend-endpoints","prompt":"Create detailed documentation for the FastAPI endpoints, focusing on the POST /rag endpoint. Explain its purpose in handling RAG queries, request validation using Pydantic models, and integration with the core RAG pipeline in retrieval_generation.py. Document the request-response flow, including how user queries are received, validated, and passed to the retrieval-generation service. Include details on error responses (400 for empty queries, 500 for internal errors), response structure with answer and used_context fields, and header usage (X-Request-ID). Provide code examples showing typical client requests and server responses. Describe how this endpoint serves as the contract between frontend and backend, and its role in the overall data flow from UI to vector database and LLM.","parent_id":"46d8f312-3e2e-4d96-ad2f-489706023fac","progress_status":"completed","dependent_files":"src/api/api/endpoints.py,src/api/rag/retrieval_generation.py","gmt_create":"2025-10-24T18:03:33.090583+09:00","gmt_modified":"2025-10-24T18:15:48.154502+09:00","raw_data":"WikiEncrypted:EPw1VhZSv2AMLpYzHbCG5XRtWugxAFECmm+CxSC/BNt+HtR36AJqYaKhwjWoDYO7gbsJ5lzRFV3Nx1CVuXobBt+tyrWburLGdFWWYHELwyLeXBguYazeOs0qnoZfvhXdb0FbU9CycHZG82pUWAcCfW/zgyApjjhjV/cHKLuhJPrqtCNjhM/bDSPjAZgvIjiCenpICVJeGMX+cqn/FjB/cMczh3alWMWCHsCrl1c722orP/sdWaNsUGrSDswdDKHDkYf4YeoaJcRXNGlkb/JBh7c08muRMLtywUYBUvODkwfQZR5AI2WPGedYLamynTVJCMjDxV/MKL18VtPAIsocXCBin7sAWuoG4CkLwH9VtRFcI1J3IQxuaaMM6XJH34zwYFJp470YRCgSwAvvMCBxvi34K3WbtlyZXSiUDsmUQzBotCtcfKcdXVrIRkjuYVEZ3OFqS32y4KAiGihqD1WROt2nLMYR0QlCasu38xMpc5PotsQy06Hj8i7Z1+SCHEFR6pv4P7f2UOvotMEhF5c9WOiRgFWLg3YrJdxlVh5So5b2xQRrP5f3/la6MI2RhbTrN35RF2lc9kWXFExuFRm8HI0P+cHURSc1Xh4YBSGGECAP1Pti3Jsh3Wls7SUIk6VKSE+mZwKUsce47twunHOuZOy0Dsg7jfWGnmmILtExvePU31qMnuNuD6pUINhVF6rBvllkN3toFObLuMc8R5c38lyyVJ0uc7HzuSUsa7p4MgcIFobmpCB1dm08Qu79pzBd9oVNIpr6D85ayD3bjnG9s+10Mw5dz9lcp0CZ8mBjJZ2ZdMoLQxNZUO8BiF11XOfoINbTJr6/QmPreu3FLkXBVqJS1utB9X/VD3pamKhocw1+/8uZRj8vpcvDdiozuxgHRs8aEUK1ei3I7nzRTb1MGSv5qp3BbcRV27YZh6zvSunFUM1uh3CXDioicdv/vTk/os636S8zAX4jPS9svPkzokOZeMr4aW87y4IfN4GlqDUuUB0bnbKVbdH1XC6lSkh9yGxjySDvTfSm34rmVKZrkN9jaEsARfHXZOzklvDRaG/aDcXwpqdSCgAwSNBFNZ2/yzykXD01lO7ZYh6V0Q4SupWGapLSKyGgxAufbJhcA6+jgqG2ggx1gSbbXY4ukiAVBP9JwBua8BnigOM2OePWkUfyEvgWxBdGuhoIrNL5sAYntlKVCuwWSIcDbJRVFKWdNSETAzJIUV3qrATRTh3m12bUDaHumubOdvs8cl5BOzdCzNOh3VMhOz1RiXHVlyt7W4R0AZGOrebj6Aa2f8r/IdOSaWSKsOKEFkE4sC12ANAIMpuvZ7BbVuuN01ZkpiGU4qq56E8GMp0TWCAZbrhvJayXFOa5TscMK9A0373kw1aDeuE/6aI+/xUni+/DVhgQiL5za+/u5V2l3fLRXsXrKD4uwb9KCijNftp6G/hBgN5+Rz9nLN0s0fJTfR8LIpD5","layer_level":2},{"id":"d5a4275e-dc16-4108-b881-a96c5703e881","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Getting Started","description":"getting-started","prompt":"Create comprehensive content for the Getting Started guide focused on setting up the AI-Powered Amazon Product Assistant development environment. Provide step-by-step installation instructions using Docker Compose and Makefile commands. Document prerequisites including Python, Docker, and API keys for OpenAI and LangSmith. Include configuration steps via environment variables and .env files. Walk through launching the Streamlit UI (port 8501) and FastAPI backend (port 8000), with verification steps for each service. Add troubleshooting tips for common setup issues like container failures or API connectivity problems. Include basic usage examples showing how to ask product questions through the chat interface. Reference the development environment setup guide and ensure alignment with project tooling (Makefile targets, uv, pytest). This guide should enable a developer to go from clone to running application in under 10 minutes.","order":1,"progress_status":"completed","dependent_files":"README.md,docker-compose.yml,pyproject.toml,documentation/development-environment/README.md","gmt_create":"2025-10-24T18:02:30.154218+09:00","gmt_modified":"2025-10-24T18:04:31.330556+09:00","raw_data":"WikiEncrypted:qfgbutC7oyxR6nMxrwk1ODnNMBEQ3/sG78fQT1yXWjspqw7wFsgcSykO0UmGZY8QTKN7XNoRj5gLcQItLpCOKXutiG+6VCjcMYiCHQKLTKFqI5NxpB4XC9v4y6xBYQ1ct4yA68ULg1iJNcFC95NVlXlkEcdkevAoxyOi7Ik6MbbZUMjRg1O/XELd2C1mS65apjU3JrL1GIFTQVmItEwfGYLAJDCzvgKPNUGExJDNLbHnv+LZGxswigSESOPpIfANAHAcZFnf5fMaitsEvN5M6CE3CgWOLzdFY140/fx3W9ZZXv4B6hLVYxgsf/iXFN6SSRpr15udSs3toSstMc0SC3WePgmp9H7tUCgRxasneYsGc2sekitwyVuQlIAbu7/MHHwzfkt4YJqvxXqdqMeHjOOqNEcHKJB7271q3yaYCKWXicIEqN5BbmNcuVcAessP6D07+Ujan+yeuUwZxvfSgh5G3ejaUEDkOSLxx8pUjrc0dh9ZxLfawKMPP/qP38TmY2MkNx/u7vGpVH5MYx33dfDsOPiy5Y5s+UPq7JXPgjJEEEfhvkjm8i3VN8O+DATteuTlwsUCnQJ2+jBshX+Z/NQH0EXNPkB7U26fMCLZ+0/yn2sB1Grz8eiq/HaFgLzvmhbHBPlOYBOgZEfEsgdG/kE62SiNWLc0HBuSKYBhpr4lElNH7mOJ4TH3uk3iErq5hw8EzNwt+oM15+T145BxODRrwmti9E5Lc0nGhkhkjTLbeVC7IwmHaEPt5iJWqEHI6r20JJOVL4Hmc4q0uNrEHyIhpMbmBQ7MoMu+vwIXaVvGCE3HSlhdvlC9kqGgD2X9ARp2e9SZo5N/snQEorMtmhF2ILDaSzmmUPMqKL67wBiX0xyaxV16Nyciz9QfHCD21dbavJ2E8zu/GPCskufQsKLyITeb6SAzZ/jTAI/8W/iroCIeIHqJRPgkoy+6DBKlFeabluDSYX7hfT7oRKkzxUIIT8Me1vOIPz5lcar9OVs9V5F7d0leNBHI63kA795n/JFDijRgePCyaQKK3/pg//XYUJiVLy4M7JqWuw2YB2J6gbvMfJ3buuNxzKimyPqChe99VUgg7kv/cB2PENKQs4/gs3EoraD5srubJ7VvxEMCYgL+Ujl6/0yfWtX5c/wdWfyZlrFIdRwv2AyuLrHF3cjLhA+09iKCCQK1a1uvWhFthnTU24rqFF5xqKwXqzb+3u1iDUHa6+5gDPCn0FArXDuHMUi6+55Vo8ztko0r0H+9ZzuAXcyOdxZK0iSGO7Ij8HIVSxZlG/aMJfVDwLjitD/ptV+v7pqzRDu1vx6ZPWt1/+vWBO0BwfMn2HT6BS6J2KWSc6oLAdHliDf8E6qyP3fMhYdh6lmJzHjIxYUa93pFwtPcfHh5/UGb97EKY9Onx1IjS+MLa/+I92z08kjutC0BUCUvyMQdrDWADnREbgDp1m+R1QDGpi8dVquEHrWlhfK2hOhcqYMQ1xdrli6+yS0SZj7/kbr4nVLyC9kM+VMSxyyP7hTyTX46wd5RX3y2wQuEVtX+cLVu9Tqccj3pgauyDAQC5LkaJz3IzXy1u800OZd0Ox49i1B0dkrLuuOokR0Dhfyfbl61412EPLT2Rr95duHdigahPJS9l9nQhKDKBmD8wHtSahiJ+Ib66m19Y65YscCnvDBYxytCn9sRaWJOsRwgC6XJvHqqlDUzgrShdbLqC3mIlWUMIrL2o581"},{"id":"5a69bb65-5e23-48cc-b0e5-fdbbaa702c6a","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"RAG Pipeline","description":"rag-pipeline","prompt":"Develop detailed content for the RAG Pipeline feature focused on the end-to-end retrieval and generation process. Thoroughly explain the rag_pipeline function that orchestrates embedding generation, context retrieval, prompt construction, and answer generation. Detail each stage: get_embedding for query vectorization, retrieve_data for fetching relevant product data, process_context for formatting payloads, build_prompt for template rendering, and generate_answer for structured LLM output. Include code examples showing error handling and logging at each step. Explain how the pipeline integrates with Qdrant and OpenAI APIs, and describe the role of @traceable decorators for observability in LangSmith. Address performance considerations such as token usage tracking, latency optimization, and failure recovery strategies.","parent_id":"a33bbb08-d231-4945-bcc8-8ec66fc51cbd","order":1,"progress_status":"completed","dependent_files":"src/api/rag/retrieval_generation.py","gmt_create":"2025-10-24T18:02:55.29567+09:00","gmt_modified":"2025-10-24T18:10:40.496859+09:00","raw_data":"WikiEncrypted:ijiZuAYg9cAnb+K45N4CSfTY1Npz44/0XoSK7zs2ZMTSNrLi2uZ33J+tL2fBpXLTrQpEyjGXkNDbOUhR6b4iM0b4Okd3D4esQwQzVCsVCX+TEMOAZu8OzNfBiZxQSBFECJdJj4Ojv2qSZ8+WoOYgdQAcYgqWpoX3deRLdmu3rVRw5VH+/YJQeq2/GR2CMFNEh906ElYr79MISolvGfb2Mj2mQvUgtkWfV0hJjkvpvuOHZ6yE0ASUysp089jo2XgAHkJ3cvSGmnlnDifO9fV6s/ig8CQaGRoLvpdh+jDf+0phFJFp2yze6mNcFXHATY3LlkeXKinLn9oOb4CMWZxXUgDjBe+AQBnt8d6fJiunor8dkIl8DXaxOnK4YL9j4y5cW713+DMvqDyckNRE9MaGQl8ogGg2bw+B5RdQc1Qsoslg+S5L1lloHguXZhDlKMBda0TGqvoRfQTjLmatJzrUx6gE+qEJfriC5Mc4l3ae4sf2aE44bUOhjZa94324N5y98lZuZH5Agp/2UKynOctKYNbne1rp9yU86cXV3hI4xu0MgdAWoA3m2l7EFBikeVqMrfzwQYd49jvCnR2xPYhW6k50M/DMOf4d5N3mq1l9TNPM0jJl7Atwd0DjkF1AKdF0YXhWKnEwtSqlOcHiPQpkiOncW5lVZgSrYblQYQT5rbjcnAtPQhZ6KCUSIQQufvJ5ZhzwTn8oTATDE5aMUsIGdMD7GE7+d60xbj4sV/Vz80CwkjY1ZCgdtTUQ8oiRbVBLfVpm8YW6nYxb41jxkHPDsTKTkLEagZb2F6jwaJuMFZwnOjKmBeo06Gbj278pJgn7e2b4qikrLY1oBrhOCVInWu9WkmKO9G5cfDdXDR+RztohYMoDkwu+TvqcwRcPLTe9KOHBFKMoMZ7ZnBok9OyLxN2gKVTWBTnbpIehX3ACYcEkTahabp0BdaYw2yP0d2YEXfv/2qilJnmEIjzh2D0FPsV8/CHGRMLbBlbSKD/gdEGYZlZ/3NqCAE6YewDb7znfeLRWM/fM/wOIvfh0irDrCY4OUUM+VVIv22BdMTlRPUNrhSPGmlogHAzXg5+TFVhmDGrfD0ZCVb0t9+QZi31ncfYdAC8U6aHAK2NRiPP0DvGiaO0t4+3eqGLJmLoQH0jU+ivf1WqT5IzorMNsmRUlksOk2ht2ZZYZt8IBobMppO1/SSaHsgbakxqilyiONUPFDRxTY85QkI7M7zS+0eZK9dM2zjwORZAub1lTDRHCrYn0frDIn+gvI4SbCiWTvZMQjEpB2/WwaAxNBrC5hZuqgMjOmEqVzDQNX803eQAJvvoz4HYI+6N5Rf/fqu6CefCB4/31aCLzT7iHtyXTJ9LIio7oFaa2nADquXl2+dteAZvDHqdppKaJ/6Bx0DTqBvYZvi7xgr0WVcZXAIdhnRaNGPsoT8ke/FvvPd6d/kq2tr17WcRnEvGxyHsJNNfLWnKd","layer_level":1},{"id":"46d8f312-3e2e-4d96-ad2f-489706023fac","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Backend Architecture","description":"architecture-backend","prompt":"Create architectural documentation for the FastAPI backend service. Detail the application initialization in src/api/app.py, including CORS middleware configuration and request ID generation. Explain the endpoint implementation in endpoints.py with the POST /rag route, request validation using Pydantic models from models.py, and response schema definition. Document the middleware stack: RequestIDMiddleware for tracing and CORSMiddleware for cross-origin communication. Describe configuration management via Pydantic Settings in core/config.py with environment variable loading from .env file. Illustrate the service startup process, dependency injection pattern, and error handling strategy (400 for empty queries, 500 for internal errors). Include details on request lifecycle, header injection (X-Request-ID), and logging practices.","parent_id":"2209cead-56be-4095-b1a0-8101d26d65f9","order":1,"progress_status":"completed","dependent_files":"src/api/app.py,src/api/api/endpoints.py,src/api/api/models.py,src/api/core/config.py,src/api/api/middleware.py","gmt_create":"2025-10-24T18:02:57.522603+09:00","gmt_modified":"2025-10-24T18:11:06.30215+09:00","raw_data":"WikiEncrypted:EPw1VhZSv2AMLpYzHbCG5VzJ4RtTRQEIRTbvV4mdxjATSEOkZ0tNykAVWqbTTq6YQ5W7p7r8zI9/sV/UUAYaBHvobyvfx5aWnAw0GVh+ZfBv5z5FbfUTSkaLYNYMiy73vZYD6FvgOgDJ0kJD+oot+VpVESwWi4WzuGjkz8kinDOuaHPqNPyMYCZ82Re/MiBZa08Myf9LGrUSkSWpeXqEwXXmBNgYbmKTSLPrEedxcblyWSdEpXYyYYim6veMlEuu2Pxso8cJf0SeFfyZGjoEzEZHxS7eD36OStZ8dtH8rHAq7DRSyHVOmkdewkwZca2rBqsbhJlDsW1atE+nPbVnUV9bVT3hsBAi5utApwEI7wH1hB3KwwgPai1xP7S9ilHjP9T5KDJa6PvyffHA6+p3K5xTOwr+e8mpprGTG5BP9XsEKmpZpPxpOR8faZ0QVuI2APeTikTwzS+S0NUwLJ5w94vqOEOdeN8Of2OWYkAnOQdZMK4tltnLMAeVksiFIX5zRaPN9ci6xPa5zx1rJxmKVKzExnK1U5fpvCYUmXQbwZx//o0bBHpStwKXZYSyUNIbIdW01KdLbL+wtQYGUO7q5WTMSzaZoqnSJQubVd1bONXxJHorLWvnG/7/IeHLvbI1kLgy2dfJWIFzv0KwiAIptomrX9jJlijb/P+YX+qy+xHb8AM4z+IU/qbUypH3vhyOueqix4Zq0PO4dVJCEwWumSIU9ozbW7NjGDPg6hF+/KUaE/kMoNwg91WDE6ou32xcjBt9crHyHESyPASgAbt209EEb+ZPn6PREsgG0pQJhm4M9xx+197rjg81G8SPnVMtKVMFIaq38rc/x4asCjOYOdP+i1Kkqu5fFj4PDlc0HaUjdw5OULYwgdqBdM7oqGQMFx3Qt/Jsp0qM+fY2QSLwoOlw2/hT8I7m4nuZz2n9DJ31fv1mqrhGSdKfc2/YoemSJQD1SlgsqHy0IE/IOpFl8KLbq8hk/QlgDC4QDCFknvPgyTB/s5jnIcdbunXjspLaTou6ec5ytGb/39xaCa8QN0yNTN47/WY6XIOxGHzGQ18cvO/+Dh6grREE9MsNvKUdfFi78D+JHo+gtjG0nPUJFdmvgn2TkF1ESy0CJYOkK4qyWUraYbIzLujjhfOvcT2JD6EeqDcg9uz8HDAIV/Xz7fNYYaLFQ3ioFteeVSH82dIlkGMGuVVh6f3dyURJJFP31gxtN9pV6eFzA+76QjnNEFuoGMjWeAOLNQCPGFHs4ktANYskZUiEUw6dVbM7kkXTkfqop/HXY9qfIPZKzgmVLx3RLWai0DMUOrhO2jTlinXRK5RqjIFmo+OTIvbikvjt3oIPLxN5JJuoVZv0Kd656iiePF2Fu3dgKtU7ARtvYlzCmjIdPFsmhjFiQxmnw51ci73Ag6TDCxEug3xIGJZkh6QVvcfA069lz2Nciq1WZE3Ph97FLoyRIE2YVi5ix6CR0pu8UdKOf0aiD4+cHvSbHZ4XpaE0fnOcHBV7KBPhtutGk8pQJce4GIfUxBKRGE/jQYthG4o0yPNwZrEjekixwL+t1xWSvmvW/MO/r0Y3TPHJWZlys+RXTfG9b4/AE4S2r97s9PSAJPz/umKnKikdRA2k40p8ucVPOBHkJhMPvYOq+pzD+I6vz4PDJnKvg1lzDuJISr7sgeAgmetAh9bnzZWjPmMEsKr47wka+fv0cA8=","layer_level":1},{"id":"bedd86ea-abaa-4fc7-b85f-563a653a2455","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Notebooks Usage","description":"notebooks-usage","prompt":"Develop detailed content for the Notebooks Usage section, explaining the role of Jupyter notebooks in the development workflow of the RAG system. Describe how phase_1 notebooks focus on data exploration (Amazon dataset, ArXiv API), phase_2 on RAG pipeline prototyping and evaluation, and phase_3 on advanced features like structured outputs, hybrid search, and prompt versioning. Highlight how experimental patterns in notebooks (e.g., hybrid search, reranking) are translated into production code in src/api/rag/. Document best practices for using notebooks: maintaining reproducibility, documenting assumptions, and extracting validated logic into the backend. Provide examples of notebook-to-production transitions, such as the evolution of the RAG pipeline from 02-RAG-pipeline.ipynb to retrieval_generation.py. Address version control considerations for notebooks and strategies for managing YAML prompt templates within the development lifecycle.","parent_id":"4b430710-e83e-42b7-99c1-6cefef190425","order":1,"progress_status":"completed","dependent_files":"notebooks/phase_1/02-explore-amazon-dataset.ipynb,notebooks/phase_1/03-explore-arxiv-api.ipynb,notebooks/phase_2/01-RAG-preprocessing-Amazon.ipynb,notebooks/phase_2/02-RAG-pipeline.ipynb,notebooks/phase_3/01-Structured-Outputs-Intro.ipynb,notebooks/phase_3/03-Hybrid-Search.ipynb,notebooks/phase_3/04-Reranking.ipynb,src/api/rag/retrieval_generation.py","gmt_create":"2025-10-24T18:03:06.137468+09:00","gmt_modified":"2025-10-24T18:11:35.814+09:00","raw_data":"WikiEncrypted:vi8B1Mcvomu8vSSLKXP0lsKSvdB3nGvFYplWiiBfvBxC3lC/N8Cj37pzn9752nsr7irQ1/wDRW10ax5Fce74RwEkWIn0J8amqdLG3V5HFv2x+n81bJHogv1eMJec6j/R+FlD8n5pbPpWAfLWUmeedNtqwEwS4D51MkLDwjKnFI0w5xZj/zjBIt2uXaNWI0AS08wkrlZ4AViOw/UBV9qfz/wpBAp5tHP3YhTTPx4fYGNUHmRmI96JpHnM+BmDt5Dc9KR17wvG3yohb2bIoSafBBznJTDJ4ib7vk9mOrtnSYRiJV/NLx77JSPrZ3BVCQYRrz8foEUbE5iEwcJGNdaezXDERAqDU0EWD5JLIscqr6Hi2qqrr/3N9Lgz8A2TY/BnS2nQmC9el5fiWiIrqBFTtBFsLinuojcqMQ3B2MORlZsWy/87pfMWtp1qNRUHM0XuVV5nAPCAJTkiiAI9GSEghe4bxxSlMmM15b8YxeHA7aAHMfI4P6RkPSl+NdXFddB+6e+EK0mxc5wZ/FLIZGvrHiWJP0OHU/jVFnl/cBNFnt/QACDDimCGVqQSAsI/0Ua8cvfBbDz/xIvY0Kf39RZV7Y1t05GTtm8wAn7xzF1TAKgBieCOF8mvc7wgwx6TMNJMzkV+9egG2x1XsoUjjmqg+1D8xOzj5uqjaiDPm+aPwGF43ppnH74bx7BV2JENTdObnxlf/84KjrSWwyMgLv+FtysPtQQpaqv8Ex7pKoI28gIxVq6AYLuDU2FfriJhVFfhS5y+JM00+U1/yMCUfdp7G1eRnmY25oLZMP71ECAnLKtQh+19NQwZ5yLFpSNRPvYABzqNg8ljMY6JKuQ44z3a1KbJo+xrpsb3v6I6PyLpt5uY9EGqOHsO2RPcSD+2IaLM/dg5aX+QDu4QccGIe4aLajq9VcqsnntCH9fuSJa7y7bupq+iCC4HujNBJaOty9usIjdkovMfc5OMs8QtXRrwxh3pp+tWdyNCc9aP2bAzfAeFg1UiLKjhuDTb/yA61qLBbuenBAI/kW5JBvuIAejodvUfDr9dtFsNmGCe7eYbh7bLOwFyR83qEWgpZTz0uro/DNfFVcVP2EEaaTV/3LxXzrLYAFaxaLT2scvPYyNMfa9gxaY+q5ODNUtq7Yyn6svCEbNKKrpsBc/Cjv167vycGn8H7UnVKRx7AAyzPz+lI2tTrD9lcJpDFbWBDWS146J8MMbad4OGl1K13Lb0eWaCkDzQMEj6TVopIaW/xpzT633eqjIrnktyOe6usCMjVH3l0/YWx98+4F4XaojeU4Iopb15S6Jv3S2gvIuDZwraT2hB7HDKD0HI4AGOeJw33UVMzdRvZy5Jg/FemJF5nvc/zHN9hKLH5lklW4FAos17gxO8KV4xQ5wnT+/Iclp6JvmAMrw7YOez0dmlnZiISh/XbPha3l+rTYy/n5WlHyyc63/A4RqIHsar68OShrY0RROznCTC8lLKHlHURTS3jq9/vhqt+GsOaPCzdANxK8Y15r0a1MohIFF/nIWasdk67/BGELwFbXrOXjjGxrFKgsrnUGy6wjvbmRx0HsxTCTAHnRW89IeNBqyUHMVkP9u8jNGMsz8ubaJ9Cbbafx64ODvJBIB1XMfoVtufvhowvp+KIcYaKtA3HarFOSyX+W/GPeUbklBUaykINP1K3zDDwKyVwHpaDwcy+HoS52vDaMxhLDaXnx9s7OYpCDcJvQ3Lvygy4FHFjszGmkcyC4tW9H124kNH0t4slA0Z/mhUDHUl5CnQ7Z6dQYMC4eL9gZkbR5Wu/Nln943xvAQyKUhkYl/UD9s4/PX6kqKhoQV509+CBI5HWY1RTYt6eEhJzyPXtRPM84+qDogEo8eia0aQQm+au1ZB2CvLbDtlVLyY28gUc5+/AScFYDV4gzOyQ8wZeHyhnEZ2ThY4hL1tatpIajcTaOhKQuHJEmCoL7CJFkzSwveHCM6IJNUfYohaC7AFuNrv/2AKfMQnIITIU0HBIcJDZy9AqjMENdn7PRRmyJ9VQVGsHhuNJuNX+lUqZ9+JYE/gTyq0OeMiQOK1hTDsBAH/gg==","layer_level":1},{"id":"06031f82-f4c3-44e3-bed5-780ff074e645","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"LangSmith Integration","description":"langsmith-integration","prompt":"Develop detailed content for the LangSmith Integration section focused on observability and tracing within the RAG pipeline. Explain how the @traceable decorator is used across key functions (embed_query, retrieve_data, generate_answer, rag_pipeline) to capture execution traces, metadata, and token usage. Document how eval_retriever.py uses the LangSmith Client to evaluate the rag_pipeline against the 'rag-evaluation-dataset' and generate experiment results under the 'retriever' prefix. Describe the structure of trace data including inputs, outputs, and metadata such as model names and token counts. Provide examples from the code showing how current_run.metadata is updated with usage information from OpenAI responses. Explain how developers can use the LangSmith UI to analyze latency, identify bottlenecks, and compare model performance across experiments. Include best practices for naming traces, organizing datasets, and leveraging traces for debugging incorrect answers or low-scoring evaluations.","parent_id":"dc96fe26-acae-4d06-8ff1-632a06506d70","order":1,"progress_status":"completed","dependent_files":"evals/eval_retriever.py,src/api/rag/retrieval_generation.py","gmt_create":"2025-10-24T18:03:16.013808+09:00","gmt_modified":"2025-10-24T18:11:22.801801+09:00","raw_data":"WikiEncrypted:hgPzznTasZoNSlN+zNX3lu6IF7lOimJm0LORDNCumgRHrQoxh07MdaSIDc7sGawCIP6zZbKQWuTKCCA8RigukV9YzboXGFaXnawtUJhHShq8B7K4mQFuqsMS2AzUJ5Fizojm2vTgNBwFinhJvQF+62bfPDOVMrXLxZ5ioQLAp5PhZdyNj2wXQyfYgR2anrmlG0wY+9wLgPacSlkWnXjwDSALggqiNCIp5PD1KscqjtHXKDFwkzcqFpB3kHO4FYor9oHq8BWlTSBKALcxtAzpBRigr8C9LLcj0KCnO0CaUiHNXjZ9rn9Y8qr0rgZp7mQnYVeG3ZGuh6xnAZJ8qShN9JE4ySr17lV/wvlBXXbG3ZXsbdks2JdJoB3C9rBNcawQFsCG4Zym3T4bKCj1/1hKNPu7MXiOg9HkjUJSbvm1cFpoD+CvpfDAA9N4NWGfPETWGc7rYVgtAIbQgZTU8ZEn7PYr4o+DD/SHArmOHQOIQ4MEQ7CeN/EvvsRRbObvUWJTv01NqNjCoDKgu4MZol3o2Rz1D8uEHuEayuA/D7V9otwQYuAhFPPMkX15GXn4a/jUmuKcjNXPBD4qRBpEf4abFQEU1qXATlJJrit6om5+DaPxIMxjA3Y/XNSmGz51qL6Zc3n3MTZbGc7YWhtlGOkQazoDCXjTegq+6Hy9GKulYohFFdapc/BhuNMF47ER0Q1hmbySI/tyW/1LZm76J5vpyEFeAjzUtNTkLwNm2OjIIxvyUplzfMbacLRA+UZ3tVOO7LI+tJ/HU2M22lFl/xx4qPgvHII8GBPITLcyrzlvf4zw4VwlvJschZG5bDZJsYb7OSEEpxWBP2GD7CHDcxzTxNLqmI0fzK3pM67c6TIVZqn5gjB9s5yFI7/TeJGMZpnikadWb3vTb0IfEgRs3GrVP8ixXHRr6JafbmrxL3JXrgmq4p+NVdX6LP1iJXciZTtqCMVCX0khuvek3VQHkLi2Faw3yQQQXa8zzacktRorFp1FrVC+Oxpx3EWk+5iNx6NjVUmRvwF3cghzLuO5Kj+4o6R8ywweaOLdMybhlX9/4HvYbPKM3mQW0ixaTtxi1lYTOeiBE+IGTKw1s1fOAGxUZDX2O7bDN0Iy6dstEQVBBp7kZJ/wtDjGcryug/paZazw+tD0u+5RZYhkJxPNhMf6EUaLdWq/ej6l7YEnM2yX0V8CQjeCAkdrnE6bQldcWu+4Aw5QlaPv3M7nlQOvsVe1UKVwNExEkOx99hyuxxGh/UxBvdqNG11CnlsKUjqUVcU1xPsVSAel3naTzYWsjDQNtm0weW5IHpHrw0rP/aI9r/emoYzpoCV0VvgQsuSCuyot6WAmhyc5EWKwoY8UeDlO+6O4KyLeR1yITSM7nKlq2m54mgB6w6s2brSDJrFbfruSLd032P7qfCPppTxaWJB6RnvnFlAb1qPy2f1ivCmr6+EyRJbFjgr+wTfk7TM/yojGiKuPKvEExrGoKU7oDzNQ142EUZF1Qge0Joa2113j+LpkVRjSmR0e1RO4+wouc9rBSpX7HPOH35cbwXjalbIv9GnrE0MDl+98IiMANXO1sikEiWjRuUbX+0gIL0dNvCYqcxkKa+erQWIT12suUSsO0qY477NYwEJArWaXKc0Lhai7e41LUA4XJ25hQpUDSvcmpiQAnzQkcaXlcBUgXpXVZdnCjfFdEiqGW/bq5tyafpjS/A3zjhJ8h3PKl6cfDUxhfMJkfA35PgIqigHZg0EG8vWZMOOmeJTzSFjN2pDtE0Q=","layer_level":1},{"id":"ab7f85be-5187-4054-8c29-29057245cdbf","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Hybrid Search Tuning","description":"hybrid-search-tuning","prompt":"Develop detailed content for hybrid search tuning parameters in the RAG system. Explain the implementation of hybrid search using Qdrant's Prefetch and FusionQuery with RRF (Reciprocal Rank Fusion) in the retrieve_data function. Detail how semantic search (vector) and keyword search (BM25) are combined, including the configuration of limit and using parameters. Discuss the impact of k (top_k) values on retrieval quality and performance. Explain how similarity scores are calculated and used in ranking. Provide guidance on tuning RRF weights and balancing BM25 vs vector search effectiveness. Include examples of modifying the prefetch configuration for different retrieval strategies. Address common issues such as uneven weighting between search methods and low recall in hybrid results. Include performance considerations like query latency and index optimization for hybrid search.","parent_id":"9da8dd7b-d46b-4d02-83d2-513b804c5540","order":1,"progress_status":"completed","dependent_files":"src/api/rag/retrieval_generation.py,src/api/rag/utils/prompt_management.py","gmt_create":"2025-10-24T18:03:18.611876+09:00","gmt_modified":"2025-10-24T18:12:10.418508+09:00","raw_data":"WikiEncrypted:L7OndHh2dwLmabLWQjqqMgaB0boh9iRttCP+IZ8VGJTdGX1Feqh6kx4kJp91EjBjz9BBo6T3SiYU/JZNnQZ/K4LUzUdUJBzyfogMxfnPgmPYGGPnNEyUye7zSkDYh0G6sg2MzfQ+CKPFPbciavTYn/IAcNOQQCRJezunnbW7kBsKS8gGdPVrnGFOnn2p2wFRtHtDMnSDjSpFdCBzyUzi2eKC/Cy0AghQU/6/0fNYPHkC3dMAKqi9zD8nNgm7xpbFhVR8d7q7BiDbaSp/P/umWTsF3PnXTdez9AIdEbF00Ur7AbIaOlw0UphQoDlrn1KWn99MUSeLFaJacQXDO5N0BvsqVUTBVIVQCLGQOV89ps+JAfxXSCoTg30qTl1EJOOckPm4Cag0gB1bWz+ihs4WCWVZ6eqY8glUPxWuNFowH327xJT79kCr6stohvt3uy3rz2E0aWtoHrr541y3EbchQ4VRcxlI/wa52XDox0YHDnFzhEfBKLhAKKwBHwNqPYzV5IeInWJXM5N2Yuxg2d6M31EHpj2mvRuZw/N39zA9ndyMH7/s++qmkLnBEbPEVOQdTCEdXSdi9//w3oOnvO6XGG53SZWL0NIEzroBvMjT3T1Pd6GpKn4js+/obupawesdoUJGhPq2dFb+v9ckCdVXeypM9k47ZMIJtu4Bc/JHqs+DKHv1ffCCbSGH/oU4BUGIdYBSPuJSCT/NDxjn2cR6lVVb56eV8PRnsndUb6YIrD9N2SQxUyoKZV9W62qkfYjcJV4IVCiuPSCp8rLXMGst9WSioQSlpCCaKuhFD0WkI9AYwU5Fm57t7248MzdZtK911IrYmsx7JD0t/AAttVmjUTvRS5CQAycvphgpNmLk2EPy2ELGZ1tYttWOCzFRy867Bw1Hy8yBG8f8NOGleLb53KDMjxaHtODAd/EK2KzKlBd4m/er8ZRn5qgzXNJnhhTZJOxBKsZ1rvDTdCiOdVT7VGd0YxtQaA+DxQOnyVuewVqrO7eH+WTLce79hbsGsgxahQN1HmGuEloyB8ftHPNf8+S8q/ErCfOnamBbPIuqqXHhcBiAYal58341xBHjfrADMU62rHqAIFvmSDeEhqDe2W1RTTjqgMq04PNCTq+JKMv3MPNhMJ38ZP4oiTP8S40OIY8Yfn2/9pnYTBR1KFythBRAKP1WaEb3NdEt86kb0xxCqqo0Iq1vadH2Tlg4m4ZZOHseXQJGLvCxbbqnaxyBFyehFDcxFZxlIEDhEdQfTttCozoAGOuhZnD8tZlHI7iKm7GIdyHy8FD5fUtJGRyLuUjyS2n0NbqXZKyTnxikq3ZeulSm0X9ZlNhxa+i35YgBgIh/uSt2MCfakp3brjLQ72OZQFRlELeKcFrJM60KFgvULxNfXd6vqdeVCvnOA5IeidNbEIF26w0UngI6GCH7x1O7zCax9CD8iRa8+fxAjGv1c9mQ+KjjLhaJcEb8AFoiOPr9W56P8MhuCmpTg3t31zYtnH7LnhieUfNl7Fg1tizWOMd45gHeCkeabt5QyW14ypRqzVycWWUg7s4rU8ecSB7v114wMsHxBnQkYdhTfL+604sFClkCUJFNymYvKXpAOUzzb1RPR6ZanKHcQMLupQ==","layer_level":1},{"id":"08a81986-2fb7-45b6-840e-3f3d46b7cb62","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Data Models","description":"architecture-backend-models","prompt":"Create comprehensive data model documentation for the Pydantic models used in the FastAPI backend. Detail RAGRequest, RAGResponse, and RAGUsedContext models, including field types, validation rules, and purpose in the request-response lifecycle. Explain how these models enforce schema contracts for API communication, support structured data exchange, and integrate with FastAPI's automatic documentation generation. Document the relationship between models and their usage in endpoints.py and the RAG pipeline. Include examples of valid and invalid payloads, and explain how model validation prevents common input errors. Address extensibility patterns for adding new fields and backward compatibility considerations.","parent_id":"46d8f312-3e2e-4d96-ad2f-489706023fac","order":1,"progress_status":"completed","dependent_files":"src/api/api/models.py","gmt_create":"2025-10-24T18:03:33.093189+09:00","gmt_modified":"2025-10-24T18:16:07.987028+09:00","raw_data":"WikiEncrypted:EPw1VhZSv2AMLpYzHbCG5ZV31f57rTSuLSwRQcM9/XPsHjwT31zMQnWXL1lqqiUMfUxBjzAzYI0cQzttzSoUDSIf9uPBSJpQkWPEV2Hvgj6fqo5Zg9JURxcoqc0Vog+7re7q/wo0P3hGgpco348BUubzcKn3bGZg5yY/fNQOXafG6tjPy64H1a9gUrH3sYtE6dCN2DQzHSC+h69gSGquuQvuf6G+HSb+nOafnqWu6gVt2mpgS8Mh5GdWHdFLH4tpoNdRMgbZDZJQmuXuXJXCCJlV5ORdL7mo5jyXVkGbUz1RBK69DnQCYkWGuXpt1tzkAZmNNy4txnrXyoUiZ8X2mAhHoAwRHGtV9dJJ4c83HlOXWuV54CuXurjgCvMzEc3BkUBHKkJmMgYUz1ngGc3+57lZaw+vHl5KdLbe/TY72TVXUyl6aHao2W/WUImqdNs508i2oB+sOpoIB2a59GOhO/dXS3b9fCIiZ0bm89EsAV/m7d7QT0BBmrvEGtNZIq4bHVR1MXzKhlZSg0lLZF8heD8z0WK5co5e3rBortuAhOJswGDLHwpT+mfUIV/Sdhx5P/TQK5e7pMySG8WsB+MHs+9Cfp/GgVkwRgKe8vWX6AGc9pGIZbVqD3M2Fr2MhpjezRwNyJLbKhRghMeiQcJcNVDdySQXmBqfN9S7Vp+/Ux+JsZ+hqb9SHD98Q2w21o0B3isgFa+gcJCPemltqmJYAd2I3U8AIuzhvymoxDovgKMLnkoOWfAT3s2fwbjVp4QlpiadasgDIuawZ2vvsIe0ygNQVheqkKagmBAWxn4j3YydFqcL+Ee4RG/ENgnnytsO5GW2J5jTIhI/TlTU5zjlW/W0FX7R2JWeD/GZVW+Ak21zCCzGsXIdxLmxy3LlZgU90aU0GFDVJSquBPM59DA68X0ieLJLbNu2Rw38ptlNwHCxp8FNBscBONaVgkyUORGIl5PzA9dspRbajRGXdE2WmaD+O57nJ8v1rgdsRs7cI+0mjTqG6Hx8QAB8f3ADcpEfgvBKhiMbZoJCqe5ak/dskwm9ikzhHG4uJY2oZdMX58fSy+AxsAXSIh86sn1GwTQS5n8DRaf3g02OFmFoeToOv/obn8VQmlpN1Fxv9u/q/OnHixgBOgGS5TcW+V3rJvLRQA08rE7yu755wjJMmhdV+j+DCisA3iMvYBud369KDzogaH5WCfqENA12L0RwsvJvqb7h8t4aoe8aKU+W6sK8SbLNyW6NYZ9yqS6LuoeRmzXny1LrC/BtwvJi6Nj8Ha+87q6pFusMZO3sRjg5q7CYE0ESoPb/0W+i5273gaiwZWo=","layer_level":2},{"id":"2209cead-56be-4095-b1a0-8101d26d65f9","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Architecture","description":"architecture","prompt":"Create architectural documentation for the AI-Powered Amazon Product Assistant system. Describe the microservices architecture orchestrated via Docker Compose, detailing the separation between Streamlit frontend and FastAPI backend. Explain the RAG (Retrieval-Augmented Generation) pattern implementation, including query processing, hybrid retrieval, and structured response generation. Document component interactions: UI → API → Qdrant → LLM → UI. Illustrate data flow with sequence diagrams showing user query handling, embedding generation, and response enrichment. Detail technology decisions including FastAPI for performance, Streamlit for rapid UI development, and Qdrant for hybrid search capabilities. Address cross-cutting concerns like configuration management (Pydantic Settings), observability (LangSmith tracing), and error handling. Include deployment topology and scalability considerations for production use.","order":2,"progress_status":"completed","dependent_files":"documentation/ARCHITECTURE.md,src/api/app.py,src/chatbot_ui/app.py,docker-compose.yml","gmt_create":"2025-10-24T18:02:30.155554+09:00","gmt_modified":"2025-10-24T18:05:03.937362+09:00","raw_data":"WikiEncrypted:EPw1VhZSv2AMLpYzHbCG5WhrBrPQhDzToMUWXKxAdV8GO/eloF3I4Slz9yuRjGETQik5KYGJbnRBvt/mooXBeKEr4HAUq33oPvKPre2NX2YQRRbsAbhRFPHFN6qOb/1uQsWNuZN1W9QmSeORuHn3yBr8FzfAX+oZ/C2KzBaornBT31ItM72IF5cybC5drZoPRa1t0EAO7UTqJ9jCz5wr4MyWGxW2seR7aBYvml/KHYF36c9SmWlB72sUHM+rJq3Wt2Sqii9UfmvESU6GzgN7p5KmTylSpEZoz3erV4j0OZLKqZ+IhiCD7/xfsIz7/G2JudkGAgiZMp8EY0DbypTt8b57rpdaAc3rBuoV14kY6SsV7Z6Lgn2pqzNN352Xl8IvGtQImULzDDmPGovTbG6+M/FkoluiqZfkK2CuKsAq9YNFgf/vQdfxVVr8bdXx3NSExKkebklgAhqbC+WAsqlakG4wJ+ZxtqIGy1YDAuiWY8jNyx+DPkqcneIPEpUZhRASOvr6kW17zZiEXA8FCqbX/+FTOE0w+JeYyi3onaDYAyZm9WwTfZJIuyKhjymM4KxxphQm2Mc2UlHSYs11Za78gRa0ztLG3yOjrcwkwHKWUsEtC0NCHUcUr2MWtE7TecuNKquom0wBssqbrIyxSVH0HHU2SqFqHT62Zo4F6A2uIY/KfcM08NqWl1l64PZfDoxlMKz/pGLHiJKBPdUCcuDNqGphSogRPyFldgQKuM7e+jo9+CuIQ9GtjvUmzVAaN2+9viZnaRkm/cmLEU2DlZS+BxmH3d/ixethqKqW+REGkkdJyd/2PYpUn7kINpdXm01PWsF86Moz3PrAGsG/YOO7lj/PgfHu1e2hQpIdeJAgfQqrB5Nz208E1KSL5gjJaiL2cSU4drZPdHfOH1WXHsDFGLEioSVCBzgG+bu7gLcn25unfKbJK+FCKZupwZ84BI2sUdjVq9smgGZPRqh2FvyDx1DUaMu00Ej17Zyy5LVT4Vd78TOTBn3Gza8/elO36wiA9BWycsJAJe+Qe3wOlD7HHKU6UTBsVovRA25YVzDMddCcCY0smHm75t65tN+jjO2u0P8XiCj7l5cyipkq4btdAvqGbK1ec44dl8T/+VJy+BktzmH9rTOgfvAA+HLwe1ftAGnrIi5iVMA4rfFAWWM2ftacayQDDljXQQ4nYKxvgnfJTugphknjfRiCvBY5tsmJ31gxuP0PC7ghlVRgRS0jBP4ZVUcGlzopGWzYbkNIvLxkm5kg5De+cz+G97R5TPyvwwRrmG+8jn5ZPvnT0f6LDjd8i/nXoTWc4U/yx+HC0F4vmqaKcbgFry/PSY7kLBzpTDF1NSw62uPIVvU33uFB7Yz3M/dKiOBtz7xszoW/KJglf5ovWiEESw8f/1IG09rWaYTP0AP/nsrTEiocmolefSJeJwvNCujI/EdQHjbV3dqqoIm9W10/kNr5CinMGYeYoctQ3PZ1DqdPfdCpds8uNWCYPdNMHDR6FdA8az9H96Dd91uWPpd+3u6aKgdY7gdyBd1YqShLqn3+XOdlM9youY5uCbB4wsx8p9/0cPkEqALeSg2zbyvtfMDUKorab30tZ23IrP5oUG1Y5im8aaQ6bZHQC6u+MX9/RX7sDMeYGj/J4tWzs4Ko/n0fmyKG0JFQQt5gci1uap5KRuSewGcX4gIiyy6mGN4IwQSFAdS/ryYA+E+yu0+V25zetVMRP+oeW/vwTXJK1vfc55+FUI8zTxZaWe7oZtf4PBZLHMfup4U="},{"id":"b7726e41-386f-484f-9fd2-3da302cc65ce","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Structured Outputs","description":"structured-outputs","prompt":"Develop detailed content for the Structured Outputs feature focused on the use of Instructor and Pydantic models to enforce schema-constrained LLM responses. Explain how the RAGGenerationResponseWithReferences and RAGUsedContext Pydantic models define the required output structure for answers and references. Detail how generate_answer uses instructor.from_openai() to wrap the OpenAI client and enforce response_model compliance. Include code examples showing how the LLM response is validated against the schema and how raw token usage is captured via the create_with_completion return tuple. Document benefits such as predictable parsing, reduced prompt engineering complexity, and improved reliability. Address common issues like model schema mismatches or validation errors, and provide guidance on extending the response model for additional fields.","parent_id":"a33bbb08-d231-4945-bcc8-8ec66fc51cbd","order":2,"progress_status":"completed","dependent_files":"src/api/rag/retrieval_generation.py","gmt_create":"2025-10-24T18:02:55.296942+09:00","gmt_modified":"2025-10-24T18:12:21.301308+09:00","raw_data":"WikiEncrypted:LSudOIwrCMRMYcYqSExQFHz5CJSKC2SaENDDwNtPjR94m9PygfhzT0JTNLQ0Ejp46SdzolVy/kfwpv47q4lItUkBnCAWnKkFsDznT/bI+y1ZOBbPLvNdlqOlmIoIs2qlYuUAf4SHtWjLBq+WyZ43IcaRdHAW+OQkl6H8Icr1gewlUmQ2LVlCK11ovgwlu6S68X8OIRPB6KFL4UbkF7f8I0mqAPfY4e2GhH2gRiZfwGscl6G4n0CgAIXqfl9NuGJeLtWo+VJGSJaktpdk6V1uDucvV2loowugEYyEwsauCXSWVyhck2CDnPtvGnXV7NSCPwcZxigAeDALo8YjVBVqONcRiwGCmZrk3LGeGlMCtA/RRXft0QtpgFPBbtg1Xgmo/2TNVhZF2Qdu6O4hRYaV8O05a3j0o/eLPaby8msASyXWmXAOlTAhUuQ/9yB0mcskyeUT8q0x5A2zc2MN2x+YFC1Uiy4N/FkXiFcDWDdBLLbV4Zfl7kSFRcAWy4sB/rOXWNckyA7ACkG9FyHgsj/MBdjg9XEH3YQg82gWPzTeawFIj2QioEnsCkZjQrwkdgsoZndq6/8DiOmSgwTD0Ol5G5rm9wwUPgZnmHZd3gSF5FAaSx86SnVQ8CF+emtg3szXlSRCVU0ZXwc1krZjKF59iWfaxb29IH2pVXAbmZkkXP+D+cpjqQkVbhOw1AHDz7DDHR4Hj9MGZT2HFfwTxb/gaEyI4p2ZBTZv/1xjYhkThDiJNOVLYLEfwen52ue/F2WNFKt3LcmqAuF8UhrLgP6r1hKLGQ/BUBVPbs8jl6zh0GFmYlbFV0abSdX5B1eoaGAmWU+TyBIESwF0nnIUl4RCazKcAJIaXzfa7eF2Rdl4BXOX5Kr+a8JrYQnrqrHGqFASfr4NBjS5rJxrJ/dT8V9au3P63r3VhkbF4O2+SDPwFA/mXorG4MXn0WI9Vy8hHFTjnTs/XeNtZGvVblS0LNnWYNxlvJ6BC4gL812HI1XQ99MvOgBJIHCkCMB0j3K+bQZ/mXzaKSLb3F/JCFo9F+PCLT6QNGsNT8RZN+wy/hApSLT9HGAnFLz2jiWEoDfxBMvGg/N6WDJ1alFG5E3RqrYQThbFhZ0zaLb3r29IcuJtM7G3AbZR6jR0sDCHs+Nd7wGTf71qcTHu5NXOJUJV8lGFyBhu7o9BMrvRUXMR3iWPYe1E24QveelihuLsdKwZCUOMTt1S28oJvOQUy7rGfam6auuzj1LFrXN/TkgotY3Hwr0STQY+NFkzzogI83fwyPzU1Hyo/UrLSueDD2Rm1REbTkctRdLd4g92hDv+Vf1lXS5g5shauYMStH97wEKkokXMEsbD9bl0I60kIs8UPN0Y9i2JpPXnJTV4QrCKmQFYbBUqoe/VUh/FWJBYZ+X686RccqJ8tWTrXfwHl0XuUVin4lkAmCnyTmiSl6vchYlZuIyWKX5cJgd8saE9OBv2sXcB135o2z+IucEj+1WZedhqb2lhbQjywaMniqhFslWdH4w=","layer_level":1},{"id":"90126b26-d2ae-4364-971a-34a3d36337c8","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Data Storage Architecture","description":"architecture-data-storage","prompt":"Create architectural documentation for the Qdrant vector database implementation. Describe the hybrid search capabilities with both semantic (text-embedding-3-small) and keyword (BM25) indexing strategies. Detail the collection schema for 'Amazon-items-collection-01-hybrid-search' including payload fields (parent_asin, description, average_rating, image, price) and vector configurations. Explain the Docker Compose setup with persistent storage via ./qdrant_storage volume mount and port mapping for HTTP (6333) and gRPC (6334) interfaces. Document connection patterns from different contexts: Docker internal (http://qdrant:6333) vs. local development (http://localhost:6333). Cover data persistence, scalability considerations, and failure modes such as connection errors or missing collections.","parent_id":"2209cead-56be-4095-b1a0-8101d26d65f9","order":2,"progress_status":"completed","dependent_files":"docker-compose.yml,documentation/ARCHITECTURE.md","gmt_create":"2025-10-24T18:02:57.523603+09:00","gmt_modified":"2025-10-24T18:12:55.164014+09:00","raw_data":"WikiEncrypted:EPw1VhZSv2AMLpYzHbCG5TSpUo59NtIf/NL62lfNW6mlpxe10YyuXMaqxyMzrxc7jATV96kiTx/6rkKPBEvuM7sYlv4ViMcUYbam2O90IkjNKGyOfTVWE0C1/0+OaAgMYE88CJ9pf1q7JuTZDAu4IXVU9tKbNrriHTwFreEJPUKFRhMdgymkV6yrvHskbNWyWZ4KS14XJvvM2xw7KfU8UHrAdXRELjh0OHXLw/Sd2+srMKeBaifb+ziFj6JTwM7jyRP1Xapjm/ETd7CbvTZOq+52p3s2X339m36ssb/DS3aNGUMd/PQBZ3kUP2NVX6t4hCabngMJMEMcwGQYnFSrVtwKfASux7fRJ6JGKRfMFNwSfqIGL1Fl/l2JXCasC45wlZiqwWC3s8HTIetOb1yR6wlsCjhIH7LohL6lDNc/HKAzEmhFU8DulMYYPKQD35vnLGdgW0h7FvdMpscNRLYMImZqg3Hpvrahotv3P3ulxMOOtqsp4FkIMXJh2Vq639om4d9KAnbk78EOqaxSJKpGc9VPMO7ugNAOYizUQqrywYK5WaTXPMea+XJaO+sjhx4Hz0qnZzMLK1LToWlwrWt+8jof0572H2hvYoCJosDn4SzCFgFwiNKpAbKDjcy8ay/jCeN3MuUY8fVUGzXiqcHnraovLDkJfTVbHe1lM7IUG3KmqnWovqryZ6JWzNRJU89p6X0QzNdVMYp0f+S/ovJs/OWfnHJsu1gHzXPaNiEe7WKOKQpT07F0QgXwyFAhbNZE4uQuBsOLOAfNCCNAyrVGWqkbMqzTHw8/0dC/sXsmHJJpb5AoTCa6kpD3ZOqkrIXRilwVkmq5aerecXqG2exvfjiydIlREKK/qIQ35PzN7UNnFIEA/15RChDSIOfMMlutRn12DrTmD2dSe8XIaAS0i3xbpSr/Z0MAh0vN9Avn+GiCsY4QjmCVLd/rEP8b2fW2ZgJMoDnwEdNjygTVSXkbYpoaz5DD85zQTVvNFM8AYM3xBkzebDEiXR+1M6sIKsccGxV76Y/kcs0YOuCXM1f2PWnWpSdXRqYo8FEoA2jTXyoZ1fS52riNun92AvRi6FqnZ1irG9kHibbYmdgk9vjYsAWI4GkIgxVsN2Sf109XUG3FmoRycjKrtWh2P3WYdZyvlpEkUoh2ZUm/YJrkIRE12/D0CFkxShnlmHJ7hc+yduO+cWuFaoQ3QF8A/mKeOnWbzfA28ewZNvouIs4DSKws1DofLCkAE+EEes3226uKmkvPZSsOJ2rHFtenY6StglMHnGs9aPMS7wUI1uoFsgWqr3RFXYiEArWpQPOfmi8kaa2fUq7kzzq1XUG7qVnO4bba1e52V92WEPDNaDvWAszJMnEojRL5BYPEZnJz0pycKhuCvNcorArVSCto/A9cvk0yvW69iqAkYLGzwbvSeCYDjaR+dn+HEMkkcirclbGhFUh8WqZzSHyIpPa7MAYhZyxfeMmewPEc33xpWMgnsIDNc3oWGMWZGrRCQhoaxdGqW80xPFa74SuvRs6SJwq7KJ8VNqfRJJHM/LUYf9h52GFZIg==","layer_level":1},{"id":"f16fe8a4-aa07-4214-8042-630c2f316ab7","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Configuration Management","description":"configuration-management","prompt":"Create comprehensive content for the Configuration Management section focused on the Pydantic-based settings system. Explain the implementation of the Config class in config.py that inherits from BaseSettings and loads environment variables (OPENAI_API_KEY, GROQ_API_KEY, etc.) from a .env file using SettingsConfigDict. Detail how configuration is centralized through the singleton 'config' instance and accessed across the application. Document the integration with Docker Compose, where environment variables are passed securely to containers. Provide guidance on adding new configuration parameters, validating their types, and managing secrets. Include examples of accessing configuration in both the FastAPI backend and Streamlit frontend. Address best practices for environment separation, default values, and error handling for missing credentials. Explain how configuration supports observability via LangSmith and extensibility through API key management.","parent_id":"4b430710-e83e-42b7-99c1-6cefef190425","order":2,"progress_status":"completed","dependent_files":"src/api/core/config.py,.env,docker-compose.yml","gmt_create":"2025-10-24T18:03:06.138305+09:00","gmt_modified":"2025-10-24T18:13:25.648024+09:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllPgfgMGT84WysP5aU7jVGgMURpRhjB/o43lFEdLq7azq5hkAT2OZJVBYtbtiDOaDkStDglSf7DvfXFp1mHf3nKLcJ9YlJIBfTY5EOHh+hH8gew+HmJ67GLcdO8T4duSOej7v5Oyw7QM245Vlr3BttXgM3gP1E1yjeT4hREYkXmjYhHMl9EJLRud+soNd2g3i6DCFw6Wz31SkCBiGX3dNrpHCYo2H5NoOpls9cUGoR1/2k6o2rYUifFEBMv0pQWOAIybrWgUlVrU6NET1F+8S3WIj072s3xLom16cBtNkKtxrvqqQkWveHqdlRp76ePQLRjYmvXfDUFPypjrgDHdGesYonv6qHE7F8UaH7OmietXBO8M/b8sHnwl3O9VWMBVaclow/oe5xXFgXoIkH7okByb4jliKMcO63H56TVHP9ud4BdfrinCAmOhKiMq2NEKqx1okglN+B6XiDDD+Fa1IXnHZqt3wmoHi5CiBQdaK2bzXfn94jXNZJw1eWvZJD2U2ednuw4ULX+EeDU9/JC/N18y8m/uPBRWvbMj4P0hLr5trYHH09iyhjzGUITrurHc5KvXaE950tXso1guSCReQ7r6C5Fcxse1iF3u4RPGPerk1pltfwutC0b1x/kE5/1ra5rT9WVmD2in0/MjVk5E3DkMwXr6C8rpABul4rGJEYN5AOhyRVCW9uevek0CIL0DZ/ywTCiZ83HCu9aV+IVsz4kY9rtpNpBuijKsA9HNuamWyL7Ruhs19zDvS+o6V4ImlDfoz0Lbl5WexOJOJThJGzzTL33yWN/qsmy7REjW7fwRxsCtRQfbzdamkTXq1nqC9YmbnkdD0u9Uv1H8xmARmMb4DgxKO2JGRchtDp9pehskvhyYLJOICKPLqlWt9ShqTpvwYNWpqhxZmPnZsZr2AO+2Q4/v0kgcTJftXzca9HPCIolCDF9IY5Fx526+5U9DrqNmUhkZVzvXDo/UxWuFqF+yttK3CE6ftIlazYE2Sxea3lh44CN17U5KGyktFxjzdapEzl226tziIkamIiVqNF8L7yPpsqEjw8UNc9R/8vzAH+XlC18lyBDL3Gj6KKLUdkC3eDy3Yk6amfnVCz4KXg+614CEGs9vI7dHDTDi0pGbMJFK9CVQLZ2pjhCzbloFh9p0EkqrkTEV8eAJOOz6DBNvkphec2B/izz88V+5fDYkywLvLjKysr7qOjx8RPqfjeuF5mVneUCyynVhbX74HchcoZwXCp9oeNnh8N2aFS3xSnacVC1RKL8MY6mZH4Y1jEfCQyA3qHR971P5EOTilINxnC6gYzuk3Mn0TO1Dv9SE0pDoa9qz8y95lSlNshRIO808yByPFtWWhLttKmbaLgqL98c5EG1o4kG9ISvvIHQSaPIdlZyyNjkg7GoDcz8EIrrR2Ji/9M7dAdM+bK03ofLy4C9Qva0+av2OAEqiEi7UcHJCkL27vynZagwcS3C9gZ+TA2G2HB0osj4qnIsBmB5biJGFzraS5tqBTMZ14F82luVxmQ0doGAC5xbZxhqdTg8MLCqvBG08ufZ1+vEu9OZrqocgFvyOe1ITTjxNlK1e5hNHA+OiYfHJvVGDh4A1roN+EX3Hx4OlCl1lG5nJxIzGLt/s5qilct3ty0Xsb5q+y79Fxsmu8HxSTuhFK/4UvsHbddn48s7QpdLIL3cZX+cM=","layer_level":1},{"id":"e7818176-0020-4733-a3cc-60f900b06d14","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Performance Tracking","description":"performance-tracking","prompt":"Develop detailed content for the Performance Tracking section focused on monitoring latency, token usage, and cost implications of the RAG pipeline. Explain how each @traceable function captures metadata including input/output/total tokens from both embedding and LLM calls. Document how token usage is extracted from OpenAI API responses in get_embedding and generate_answer functions and attached to LangSmith traces for analysis. Describe how similarity scores and retrieval latency can be used to assess vector search efficiency. Provide examples from the code showing how logging is used to track pipeline stages and potential failures. Include guidance on calculating cost based on token consumption for both text-embedding-3-small and gpt-4.1-mini models. Address performance optimization strategies such as adjusting top_k, caching embeddings, and tuning prompt length to reduce token usage. Explain how to use evaluation results and trace data to make informed decisions about cost-performance trade-offs.","parent_id":"dc96fe26-acae-4d06-8ff1-632a06506d70","order":2,"progress_status":"completed","dependent_files":"src/api/rag/retrieval_generation.py","gmt_create":"2025-10-24T18:03:16.015496+09:00","gmt_modified":"2025-10-24T18:13:35.469728+09:00","raw_data":"WikiEncrypted:9uOBpMbLX4DyZqW4us3Wm73JdYaGkOkSEeKL4YQhpFS8BPtjQgL7HxmuuSfdMA2LgswDvugtFODg0iSiuQgRoWbJ6N7tO1ZhRpQ37RN4x/IrF0dr4Z/QtEtJdfVNE98E0BK1YCfdRihWAmmPhh9rtZYc7t6YE5FPUszVyF27pc1KEeLGmnuPFk9kyQYmjGF/dW1VP2cybmqz1WUr9ToW5LzKycc7ZEz4U0WcjfdRFjNvqYMkfvNk9tDNi9pl7kcnIFzDrfd5MiE7DvThM0tRzA9Q7o4yUlAmA8PPtEJGP9NuD1vdSnoVjluRnBxxH6WnkM4RDt0EaYMzJ9qYQeO/pxQMkMaA4sCmq3bOvNsFduxDc8R0Epzrk69BQFw/Yiatab5NFKi76T7Gwdgu902Jp2orHFd2QgpPqE9ueXKAZJInvfGVYbaJ/rYWfmrScEk6vfLGq9eoPl8PnpuGUVO64liXz91Zbd0hJh38EnImVPqr0K2At22+R4+qG2DAiBgZFcnwN5J/+t1pnXP8w6PFu+CUVwcAgbqPAHmubXrynwzkzyYZLv954aBHWVO8V14QlgRfqkoi2E0LmZ4iJEhoeQu5WVQRqaz6AsC7jhoE6Z1DQNImZ//C52CTJ+6sX1QkJHjM/MQkPHQEKhGbci8TpxmU+esTGjijwtN6ID54qO50BqkUPAVThLzczXC+XLIM5RwAbfIGH7CEXlqilFTuyJRVp+DrLl9F9i0iB3JYQQBuGAR35v7nWyHvgSpx8XdBTbcQbntLZhsI50hTLRhoJQICdS3w1tf1imu8MDIyAW/ku5itoCeI40F6TiRwgwZ/j+6BqAanJcxg9oDOmXR9RsIe6rSIBBcjAWLkcxKJvWXjMUIo6Yhgrb5TCjouD+6dPJjINVWyi3yEIhV98wa+7kPqsgue39X5NMcmXqv3LLyIdz3RyVXzgokfzc/8pinfVvbiLaPGUELwqL3SZ3vcQQ7QWL8WZb72r/uPNyUt8UfBgps5e8BtNBSK6b7pzu43QcZQUaGHx2QV7Le0ui7eblqCDj8ltb3JEUPvckeiLkn1lS/CwAed+zxpTGlg4qqslxZspIk9mOh1+h/1Xg06lQVPbC8K64631+WJFBi792129AQktbtrbY8T3073/VUIApOQRbb9Q5a5AJJb3pT2VznAGjRdJXoD82EtlCcVt+PompKVGvM0Pzg+ZiztJHR1TVZHRHkeN22FiRp+ip/RP8e3KWCUqFEhCR9BhvVId6ylyl4RTnem1KfIGjsh8Flum6tUd2Y8xe/kQymHob8EhchyHGfPzYxHyH67MVjZGUlz2Mi+HDJum+p8ds+/jlqK9pXyZTxsdIDm1OnHEvX4Hvy5E8E047VmRi8epdBLgksm52A49eJxrqTCTjBNvs3U6U7GRRKKYiwMVLRkNNEoKTpN6U9+e4/PpRYP5c0NcNL3DAhoxsH7m3qeORF1uaUENEAVFOp2W4unc9eFBz0ThrMJxSTaa/U82ZVnLv64fUSImIdfKlXG9hdQqKSWDSIdVSxoczLJAAKQqko/TYsxviNdJmHLH1W3UsNplRHBMPOm40wa+u/2/NFEwFU6WIn1oo8aa1dnjMf4zw0sJp8XZfiOB2EY3N1aQkdKunzwpXXFOvp5HiLK/Ehrz1YeYpbfklI6SCbJ4kpPxjQ25+UmsJ7koeDxGd0MzZYKb7yW2pcQhsUA53KWT0GwrPbpiUnb","layer_level":1},{"id":"aad04681-8975-4883-9e0f-93e60f5e23d2","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Cost Optimization","description":"cost-optimization","prompt":"Develop detailed content for cost optimization strategies in the RAG system. Explain how token usage is tracked using LangSmith's metadata in both embedding and LLM generation steps, including input_tokens, output_tokens, and total_tokens. Discuss model selection trade-offs between gpt-4.1-mini and other models in terms of cost and performance. Detail how caching mechanisms could be implemented to avoid redundant API calls. Explain how prompt engineering can reduce token consumption through concise templates and efficient context formatting. Describe how retrieval parameters (k, limit) affect downstream token costs. Provide guidance on optimizing the retrieval-generation balance to minimize unnecessary context inclusion. Address strategies for handling rate limits and API errors gracefully to avoid wasted calls. Include monitoring approaches for tracking cost metrics over time and setting budget alerts.","parent_id":"9da8dd7b-d46b-4d02-83d2-513b804c5540","order":2,"progress_status":"completed","dependent_files":"src/api/rag/retrieval_generation.py,src/api/rag/utils/prompt_management.py","gmt_create":"2025-10-24T18:03:18.61266+09:00","gmt_modified":"2025-10-24T18:13:56.128497+09:00","raw_data":"WikiEncrypted:jNUOaeugMFtFggCGQZEcbEVKn21lNvyg15Ea3v+U9Ued2MJmz7FvvfgRWNW0hlwr3BXU495dgnfx1SRT7P54aKm6ItoXhzsqjPzd+U+ioV9iq0MwmvDI5T0+KCedqjMzswa4xMxcIgq3DcP84BES+GLKg+vpTbCuuQwKzZPmRgGqiC0s0mIECN1KzCRJgiUUsq4U4KKNc0q8l75sRhGSMPWiA91+Y3Hz/7oEt1VNyfPkU8ghOVtBUViE+mMh6yIRGoZF7DYkF+HV8woOv33Pfu4l678yncAwctmvH09ZlY+POz/zSoAmDSU+k/dnlnyOWqhMqGQXzrO5Ack9z6xP5ZuoFivkTy1kfW+7dsUyxL0iJCeAn5it6PkVzxf1evOqS+u2NgJtKG9L3q9oe0pTvQPITyjd22rYO69e8TnRhOMxCfziJ5oXSBU0ScmlqKb/9alyXY3Y2OOif6ySH4TUkcmeztx65U3CXZ7R1Vme0w+eRe8qlOgjXf37p1HEGkwSEH+hApupu+memcE2OoVHLqzCX9JCdKzEBSVf2PnS+JWVeFrUrHKoRAYMO5oAW0Poe+nyqBsJGvqwCYNaPUOdRi2H46eYxAxTPVMaYp4UjSqvQC8tiqmEvYBh1qFT/zwztu3uhwTic8xnZfycfIIRcK0CCU+ri/H5CcHBTpzWfw72O6FegKHcQoq61Oi66Mn7P7hQIt4vmGSRhrQ7efIY7p2a0/sZm9dKlf8RptXQ99PIWyMttrcw0KVtMfE9dRst3/TIlt8uT5Xivuv//4vgbJ8I1j7Zl1FVNe33gTTlTc7BV7kIqvVKO9xMOvH1p2rhuAJdM2Ba7OwtouYejpw//gtAFVsttHghlW3Guc1/ECZhKTWNlVav4Soqkcw3m268kUBkqIh7JpRs4RPijLwzzGnULUfeleax/2KfaMKPYJdt9jwnWaL4duQ1hQmNQ3CWAcJRGRQUOYJJLrHUOPU0iZDZZEEc7zcvPA+I2ButR9rCJZxtUXIbR6E4m9V/cDqRL7FyOTWN41exE/58e0yyaxQASNB096QecQjoE1RfEDqpszIi2nexaUAPv2FJlsnFkvaYPR09cDtjUxMXDt9UEvq7noykNPQsxQHPQVPppxglBuiP52JOGlv0Ja/WtJxRS5GVkYBWxVAR/G52r2qMSsDXubrG+sVU01ibyBrYaEDBMavrxHFd5biJvRKtS1lJhGUbW3DFFW2YqJsdg3RgJLKRBQ9w/W7isytP9m24sw7c1MXRI/yr4W8BSWVA8oSMk4oVfdLjufdKTh+EIV3tq1WNaRPEjmd8KhlPOx4/p1sPFbnxtPyJxIiVsPXUrkm7gAEr8qxPRPgyw56nikWThMTNzP5sswp+GnLLTS+kUDFFEAip9zLoNdeQTmvzTFbR3hExgStx5pvGSJjFcBE9NbGprV573NNJEIEwOUMJ401d6TudzSNoFnrBSKl/iBLDaq6YlFwC5MdOdj0S+UjAEZG0ZFBBu+RkxzoF3M317p6Wd4wkJJ5X/pAxub5pH30Gy50nlmktOryVl00X6Lu3PhMlgCEU9WFk6s2ILISGudWWvcyRlEYB+RDBZ3rl4/4nECqkddeMj3fNvaem8qeWNPCoodx6IH8QHem2a9J3M4Q=","layer_level":1},{"id":"e64bf512-b170-4bac-89a3-db5867dc230a","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Middleware Stack","description":"architecture-backend-middleware","prompt":"Develop detailed content for the middleware components in the FastAPI backend. Explain the implementation and purpose of RequestIDMiddleware for distributed tracing and CORSMiddleware for cross-origin resource sharing. Describe how RequestIDMiddleware generates unique X-Request-ID headers for every request, enabling end-to-end tracking across services and logs. Document the configuration of allowed origins in CORSMiddleware and its importance for Streamlit frontend integration. Explain the middleware execution order, request lifecycle interception points, and impact on performance. Provide guidance on adding new middleware components and troubleshooting common issues like missing headers or blocked requests.","parent_id":"46d8f312-3e2e-4d96-ad2f-489706023fac","order":2,"progress_status":"completed","dependent_files":"src/api/api/middleware.py","gmt_create":"2025-10-24T18:03:33.094281+09:00","gmt_modified":"2025-10-24T18:16:19.285005+09:00","raw_data":"WikiEncrypted:EPw1VhZSv2AMLpYzHbCG5ZV31f57rTSuLSwRQcM9/XOz4Z6+8KFARotwe3C9fObNVmMORfXcUsov2LlpGNtqp5AVchZ/t7JF5TcsTuc7RtveCYO2u7iLH1bbt86AL5msko6F7g47uO/KK7ETbV4EQ0Ff8/BVCxIV9Jy2fp/rTw7OyatdKRLkCiDGGVcerFUgqbG1oTe+Bf0cFvYbTllBHLwuY5k3XXmuFSTzpfdjZfw9IfP6F8ulQdK3f9QT66iXuh122c9wrjozw4GZO3II2UwufSpXTXXyQvW62PVi0eNM6J9YeQd/gf4BGT7Yb5MM8v3kjTuuYNYdF2fcTGMyx5j3TMbJP+mbYTAFaaPvDCIZXiO1eHFU/lqSuSmRZVO1hPM2tu0k/uAGeYhUpY66w8RGtldjY2HzJHcHzddYxOYHdWs6qqx04ws2Hj8b3FIuotwBJDOhPLBjjgtPaTx6kE1h188OyWuJZKrgAe+KMRpJUj05fNG4uRrxU03hySkjivPOP0s1mPhtZ/Eb0kc1h0DqeTGRE2bqOtm4egf7ZszfQ4EFua+pIxL+YCKwhNswUkd8lVJ30jz8Qn7JM3ynKVGwMIrHmr2iZWR6HJSfnLvQD2zLYF938SVQK8yA0zex6y+cLoZx7QVAw6GRacmupCWiOB1Keun91vFc6TrNM4LoPlRDoPp/aMM38FpOiCVAyeI8gpA0TQIWAFSk3SSQ5AfRApe9Rhazrk5O+OS/iit/zT64u/3R4/K6fB1V8Rnw00MB0o8hMIGm5VmOgQFDxO9g0xNtWiDBHq1TBxB94bu1yknoYxA5f/uRBoHwQnbNiU2/xZQFwPQ07YJr5XpnWqYS+doNaYOpqTKBieE6s1hU5/y2MKDIyhw/Ug5/EkPxkBb8h5ty1XEcKConVfnqxk+vYEhYF/VdxDRufZl8auv6MckKW+6pHkpM3VX7Xp9/vqXdl4ki17m9vbW+7Z6yOs6ajIs2ynLurctf02SNXNYVvytCkon1cr4iWWF87wfB3D1O7IRQTsUEwKtLNP1qiPntrRGlQfh+UCGTzNGznOCFuxXQToPPWjKIW4MPTeORBvRBPBA1lDxuulM0hAjnPyQhRa7Rk8JZWOODDfVJxNkZKrY1gOxtJYVELf6jwJN/v3s1vTDQwpx4XR3Ss8PBIBFJM6M0ewcM/HDDb3UJ46QDiZYaS9lGI0M1xh0nTJAC8/W5YmlQz91hgHshOrvnbMLqsJSmxvuv0lW3++qL81hL0DyH2LLeUHik5RZRsNRx5DnwOJRQgyzzos6zJhEjWH54qR5spuhkXHgvBMtQz0o=","layer_level":2},{"id":"a33bbb08-d231-4945-bcc8-8ec66fc51cbd","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Core Features","description":"core-features","prompt":"Develop detailed content for the Core Features section focused on the RAG system and its advanced capabilities. Thoroughly explain the hybrid search implementation combining semantic (vector) and keyword (BM25) retrieval with RRF fusion. Detail the retrieval pipeline including embedding generation, context formatting, and prompt construction. Explain the generation pipeline with structured outputs using Instructor and Pydantic models. Cover prompt engineering practices using YAML templates and versioning. Document the chat interface features like product suggestion sidebar and session state management. Include code examples from retrieval_generation.py showing how queries are processed and responses generated. Address performance considerations such as token usage optimization and latency reduction techniques.","order":3,"progress_status":"completed","dependent_files":"src/api/rag/retrieval_generation.py,src/api/rag/prompts/retrieval_generation.yaml","gmt_create":"2025-10-24T18:02:30.15717+09:00","gmt_modified":"2025-10-24T18:05:31.960346+09:00","raw_data":"WikiEncrypted:luoNp8LvFa7zGThvIT9T4gfD6KbzJyTAydbcRfVv0b4ipMir7bDcMLDQzSOEcRtlGF3LseUbKUQSZy8GFXzEwQvy7/qjDn1Lb7PLPvYwImvw/wErzui0rBZJajEUWBXHQctQuPpnwyaJ9WIx5+8b6Rcb0Zv7EFBxlIUBfzR+t+7iBFlHbgdtn1Lh5oOPRzJKlKas5iAPGZKIXxQ/euLo8dSQwRoF/ir9Ug1Fk+VTTKmqn+2NneLgpgFxsRy7B8HRNnSTVyJYrd4G4G0wXU5Uv49ghktQ83BgR/YcK8i+id2rdPkqlhbBAQF/RNn2fw16aZklXYJev6yLdf2xKK0iHq5+mP+ngI/GOVrGbaPLp5UD7avPqtLMWn2IGz+MusDVvFIxzDpjqbATEiNRtGG6IWVTXJZ9HRr87en5Lez6V2ABjF+dgr4I5dEU4Sjl0AXbvofLWNXlGbVhSHO/1kIwpGFFd0k/LhCE0qjd6rjysbl7TDac9PHye/N2TpBnb2arPSFX1S72MMry+wOFiG9ZI9tkq6S6FuWP5+/kDUSGLh9c7j58d1kFuhvnPwEg6iR8tl0q50EKXAJe2p0GJENZcyTzdOVyrbwFUBRma3tELylTqkjJvBE5BIfC+sriBtFQTIoPpp/F4dqpN5SRk5euYq/20RE9Ath94V1Ov20BOanXDyifTh0q5DQqzvGkKjfkN4RGFhpUjgW4E3YpWwiLOsChGQfzMyTVVzegNktlf7bs4WIj3u8cNLPXuPWwrfbIPEW2qLjApvhYZV1c48cx3bi8vucYwj2Vl3TSxnVNbqaXN37hrIcriARWiM9auEHx7l2WOhYvZt+iVEKGcbYA4oDe5RkKLrJBiyhzkTLieAT542anl9fn5DWN9zXA3851jaUhvII3KdxPfFQrVrvZyAAVgOfVW0HT0JNPMLs20rsdEY0cpdCN/oKVwahBiUc1HP5SEOPlrlBIgyellhraOrYGaD8PNfZvdCT8hZ9D5NkLdbdkcbqdH0Dkxwp7TMWcvUD2MzBSQQZB/qgajnRQ9UiyZowik89WmyTJcNTU4C+19EYa++VwhTAX8v1AS9yuvfytW5kVqyLvwPdBjuAhkOzPAUd26rfmYRTVWUwmI9FsPRTP4ppRW2XoYRcnlr484YewGurUz2xz/Z63Ht7Auqv0SFftLimBC4thlVkwyTFYYY5TzU7Pk25aRME6CJyBVTIXelIy2tv4UiTC4RNRWmQ79MYTMIi7ATARKt8fwJ6EaK8/2H3Bfxedc8PACVDDjFaBX+7wQp4LJiG3i1EUw6jTzk9BJeARjDxKWX7dwH/JTt/Ez6ZhVPlwBtzff+kxuCjUZEcyZs+eq+mWB+Fm7aomFVIh1gro5IU3cu6LPKhuveSRDOYOKA+hmDFGYWljZmkJ8o4XAdj1NPoa995Y//pyCCmLjEFu+V7PcWRSB/NqbFPJLBxIGc7qH/elVamLIEHQGhoChXHkAK9W9eA0756EeCfv/vECfL2sWCGLhW7s1C0s2P+8F4VwQXVQUSflSFi1M5zwlq9QS7HC2P24e8ypdBjE3BaQGl8XF9eaGzdAUwdingwagKOTYNbNoBQtr/SwzqQJEztGMqrfdkP1vw=="},{"id":"8bec2a2e-4752-494b-9c94-743bf5730ec7","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Prompt Management","description":"prompt-management","prompt":"Develop detailed content for the Prompt Management feature focused on YAML-based template configuration and dynamic rendering. Explain how the prompt_template_config utility loads templates from retrieval_generation.yaml and renders them with context variables. Detail the structure of the YAML file including metadata (name, version, description) and the retrieval_generation prompt template with its jinja2 placeholders ({{ preprocessed_context }}, {{ question }}). Include code examples showing how build_prompt invokes the template renderer and handles loading errors. Document best practices for prompt versioning, A/B testing, and maintaining readability. Address common issues like template syntax errors or missing variables, and provide debugging strategies using log outputs and rendered prompt inspection.","parent_id":"a33bbb08-d231-4945-bcc8-8ec66fc51cbd","order":3,"progress_status":"completed","dependent_files":"src/api/rag/retrieval_generation.py,src/api/rag/prompts/retrieval_generation.yaml","gmt_create":"2025-10-24T18:02:55.297982+09:00","gmt_modified":"2025-10-24T18:14:17.081931+09:00","raw_data":"WikiEncrypted:N1u71tmr7wEQ5xElh+MsxBR6B3K7som8nUZAx5WIJtYUejbkAK5ynmjYsJdYsmTC6pdmxDRceAe0JZoVnJSYrq3gTLLRHSCPtAXix9n4Gld1UKIF8LjFHA+Ki2KhVuZKWSKkpOAOUVWOCSVQNMdr0fsn1GiXfrnfurNlmUdvlk5tc/jycOV5Fmm2kwmp1+ma3BI3dV4U6XVK/upBr112axWEWNHg1PI2XG2C69ps48QpaMKYFUZ/LTpJI+R3j5hXYQFOjfCSE2caimasGZSqbmzSRO4YJPzv9jfvpEQTX5K2ImQcIoxrMIR9hhyEWBtxED4Vp3hPeh3CpqNAW2vYs4BgPqvUjvfclMo1PZRizNAEIC96fmgsXzou4cA+WAyacFuarQm8ObZTzFOMIU+onn9Osh2YuKEp2nKsYTe7MKe240j9fKsD2pzUiHKnIZo18WzuJmHiTGbmwlYYWY12cBHnoif3wzMcKm/fOSEJY8aMfvanrIlVYYf4WCZ3j9OdBocvXDEO+BlpCB/P9u/D8uAy20sNUPNShLWdRLAlgfmTl/RLmJmqyf4hzmHBuO9S76gtV+NtL0aeddOkcDO//UK/cTtAuZy/bA0hT2HEaGwC/7fJc8h3lJepOJUer3Ov9CJmfdN49dbRlggOSN/1oydvWoLsV+vXCL57rh9VVWeDg1BJYc6vsjmT9jFU7D0VAWCmiZVCh3oqbMpatuw+ULp1/tXmDi+QXkCPzrg5lLmMJytHTRrYPxDOXqe2p8lMa9Oad5d2at5fGenLKfb5eWBjLNJ+xcv8Z209Vk+Weky4LUjdzc1cwxXwdG9Iiwa+WbyHWRo4JQKu0pfKZKJ13zsZYoEogJgx19KhgvHiBtqFYb4Xzs5rtj8guQS125YUACY2c+4xChz9cOQ004HH0vdqE8yjP/u0Kj4jtPBgQKk1lekwHs8BA19cveTbaAw2c0yHQJgf3Y+xIgH1qgRouZ/3wynPsMiXKsbqbEvOY9THGDCoazlVlEi3gsyAl5DI7duAm9DGQHOFeqOKhBqDKJqTyOuv35zp4m0f9RPvKWs61e30DLpnGn2oS3JhcxTrT+9jiWLjiyJreI0Vf3rv3EYdfmxum926ME+XOFQWsshm2txgoleBJDshMd81npQ1wI9K1UxQ+RyyOPePJxwiBf4HQm+XbAXoO6P8Gf5iEpVXtCGnUaRNL0Gra9AXhV/y8Yo/qVpu+fTWVtVHJJFSXYAGRPXkqrL1jgR8XVJ5Be4mRKq12HNLUzHpUgA0mlS5ccW0SNzXMGXRyD0D/uqMaBIMCr/HLYRaKne0d3M3yI+jBNMC4uCQ2AkWG2VZLLRq7SwOQvjhdXpawy7QzRiukyauXstLISoidSZX6352nd2ieC4B4K/un7P+6JI3fn9fxnXxdEM26dvefPgO2o7Pnm6dv9WgAnNFXoPLGr0U2ftsxIOyWVjw+viq/CZp4IqJT0sbcF69RjWCDbxpT4F2fxIQo83h/gWAdJDdipSguUQ=","layer_level":1},{"id":"4151579c-5f3d-46c0-a623-a36df448f073","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Observability Architecture","description":"architecture-observability","prompt":"Create architectural documentation for the observability system using LangSmith. Describe the implementation of @traceable decorators across the RAG pipeline components (embedding, retrieval, prompt, llm) to enable distributed tracing. Explain the trace hierarchy with root span 'rag_pipeline' and child spans for each processing step. Document metadata capture including LLM provider, model names, token usage, and run types. Detail the configuration requirements (LANGCHAIN_TRACING_V2, LANGCHAIN_API_KEY, LANGCHAIN_PROJECT) and their environment setup. Illustrate how tracing enables performance analysis (latency breakdown), cost tracking (token usage), and debugging (failure identification). Include examples of trace visualization in LangSmith UI and how they support optimization of the RAG pipeline.","parent_id":"2209cead-56be-4095-b1a0-8101d26d65f9","order":3,"progress_status":"completed","dependent_files":"src/api/rag/retrieval_generation.py,documentation/ARCHITECTURE.md","gmt_create":"2025-10-24T18:02:57.524702+09:00","gmt_modified":"2025-10-24T18:14:58.045166+09:00","raw_data":"WikiEncrypted:EPw1VhZSv2AMLpYzHbCG5WPDkXEyTFPxxeBuKY3ezmKVFeNu0E43LsDIiv8mqSkw8LMLYpygbplFdEcB/k34zPIIuKpw9PdHwDUqB5seBLlE3DZ7GwKYqz66q3b3wrHAwxGnfoSCYAX587gPEFgsuGxY6w/vBEDZNXC94t8XurlVM/yUWsG0S0AxezaOSEf08maZjgstNbWfJ9zVVrfJM7GwtJgPqufDoWL50c9JDspPKfqTDRmUq7ZmeMTwR4cXje+5K84w+kx6r5+yPo0hndYZy4uIx9AWeH5rbaPRTL4qX/KwmwEVxcWtughmwEPraQAzQE5d1kLN3tQjUA2VMt/HuadRdadWEPEo92zYHvEEmU2J1ILo/m5UEp/bZ7dmanaJAfkO/Xf3znRRqKC6sT5MIayk8eBS3OTOn08p5hoCM8Lit490EaeiBXgGhW4zbZbM1emQ4TJW/GtDmJvcVJWWpJEudHEFPvFf0jffkTz7AX4wve5apeU82ZsRPY8m0EE+VhkuIUP5Lu1ehwuqSMe5RvMoDJgOdosTqVxQm+2FSA1KBYnovsQreEXZjrRywTfntCEmrG3Yn55/dAo/HT/R3td+H+MRo0em/cG7YC8SJD0658lsNS9WgKtFw6zLt50D0ITvi574voTGNNP4sQ/pHn/694eLSp0qPrLrwINzOPBBcw/jvUjgvuxhIT5SO0yUhJqbdLEXliUHo674Omh0VBj/Z7fzxePUsf5gk4gN/3x1JWkxHycRvVQgxOfd36Q8S/Lc3T2p8JrS/I/UgEMDIiEfe0uqEZhcZn10oMlxjO4TJ9tNlb5s6jJuoVH/YLXLezchy0pb0tZMXRYnGoek68LvUPPLcxjZDk0/TvY7dCW8GK922fEk7AnRlOrXu1+dcqE0CAbreCQLYtzou4rqcL1joPG8ebJoZGEia8U+etzFE9gMPona2Tay4eEuj+qGckz/6tlSki1xBvyVR8z1huv6ehVd3sJpLZdGQ5H3n6voGqmZWjq4fIMxMcDELG9XNk/WVZn9bCdjJFfO1kWaR5jUyx7K5FGAuv/uQhVcZSSl+eYiiiK5dR6EX2IH5wMSx+bMCx35S/I0bwoHCsFWnxbRlfshVjA+3Y4AURHF6fCDZjte5/UqFWndViUf7pFLRQ9t+7u3lqrViOfQy02kwCwKdJxuGTTEYoV90PpeaPM5HO49UMiApxi9lgROfeHof/WTMDeLM28xUY+5ITPs7/HLYdvYHtbao+9k/vJCEJ9xWbZ2Z4FwxyDEpbeLV1+2TlLAAmYLb+MQcuq7YcLrPd395Ax/5Qy7bNmL0PZztuARPpbtyICI+YMnH8RV0L/B55I/e4p38EMedFS5Ot21ZLSgXFz40hGgK2BWW3oqDr4fwQKMP5XFzSm0AG/Ebk7xxRqiHl2JMqEYaqGbYYsnHb5V5GMaSFGIjZ0Odx5kvxfLljLscWcRiyQL+QsNB7aJU7C/xS2QweM/o+IqXnLew6e0PrxigQoIP+vtqW07ycK5WErMy7GK+u9DUKRiqRJQHh4AeHZEjhWxi16LtMCYK++0i4Yyclm/xSqgYvU=","layer_level":1},{"id":"08174437-f64e-4481-837a-e3716472a840","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Testing Practices","description":"testing-practices","prompt":"Develop detailed content for the Testing Practices section, covering the pytest-based testing framework and development workflows. Explain the structure of the tests/ directory, including the use of conftest.py for shared fixtures and test_models.py for Pydantic model validation. Document the available Makefile commands for testing: 'test' for general execution, 'test-unit' and 'test-integration' for granular runs, 'test-coverage' for coverage reports, and 'test-no-api' for offline testing. Describe how PYTHONPATH is configured in Makefile targets to ensure proper module resolution. Provide examples of writing unit tests for API models and integration tests for the RAG pipeline. Include guidance on using pytest markers, debugging test failures, and generating HTML coverage reports. Address best practices for test isolation, mocking external dependencies (OpenAI, Qdrant), and maintaining a fast feedback loop during development.","parent_id":"4b430710-e83e-42b7-99c1-6cefef190425","order":3,"progress_status":"completed","dependent_files":"tests/test_models.py,tests/conftest.py,pyproject.toml,pytest.ini,makefile","gmt_create":"2025-10-24T18:03:06.139451+09:00","gmt_modified":"2025-10-24T18:14:49.333979+09:00","raw_data":"WikiEncrypted:a51tw9+B5Xez88YuZqi4cLr3Bm7PGVE/n3xg3Xm0ylnIIdlQiTjaA0SwxTWYQiNYQ/QeKj5w7H680SD8UcUr3CsAwL24YOwcN0I1OogqvEBD9jRXDRgvFqy0U0kEM9eymxqg7TpuQbMp9GYw8OiY1aqxiaJ3SzBRsuccWZWCULIVnc05/1dEnofGeFzvLIpMR+HNpuSjm8R16JPAHgcNH/3lx33UvUAczk2R5yx/btzoVpXrIBaPeB0ZKfvnf5dn6x4RNOSEDHH1y9Bhg7KWc/Wdg0IuWe/09bOUFkpEd60PyICxuoJhMwmZf85XPVBn2f93wXCXXM39RKxWpOCKBHejkKZ7jQ6B3BXlHZodYtYWM8urYfdmKUDk11pYAyyBQM1wOLVTL2KmAdqsax+JD32F7NxPBRG9YqoQ152YPwQEx1uLghqC7CZRSQt5oNgW3GY6HOcgBYbiHc/5oJBD1a2GCHSIo5fDi1NBN6OKAn8HEU0u2tenGQ9evS61uhemB6INz7zxt5NJfiiUSd2iSdta5h8M8kwzN5R8KOwbMc6L2RC9xrETKv55cCT4N+AYgzFW2xEtfAeERr9dyHcVl262WLLL9npDQqtTZ2MDqEsMRdKKHf7JEUQQxZfdqSuwdbT7vznIht+VI+OMt7Z+9LEq3iBOZpD3MCCmrF4yLyV8ORlfyadlPGyY+LLssWcPJvLPGesmpgE20gi6tDwYB1AHz/nDgaPWBP0rSq3u7KyKdRopLB5Rfl5tzJb6M3HttJzGbxV+JWElDHUdgX2BB66D6a4/A5tWvFAxgPyFWe7X7Pu6PgoTVzmo/9oIKVXMUJWs2zlU+4CRkWRqFNNjugK1Xq8VZR9hFy5HVoY+6KQEvd4m0yWzkl6lN5WEDqUJZQWpbDyH0fBVKK1o6Au99SJy/7fpzVzACTuNTT5MVlnJniyrgqwI/1qqVpE7QSPcSSE2+f801W7MT+jXK+87GDH5vyltSjoQXJQ+zrI0JNCFM3qzKOGJVRATiH0hYBxYUkzZLPx4XP3OLpz37Dcye5mU5cKEkppJzopfUGXbWKhGFLLee5ZXPKiCuoYi80GiJQbcoAoUkWeQShXlAzeI7ngCtfEq5V3n3j5aWaXriQY7RhQxLvZJPGdHKMIkns0s2Lm0cfAtBjDkbiJOQx56ETPjBhU256oBxtETzFicGHHG9rlWySY4GnSSzprGgQSR/dnOms3tYM8EG3omVAs7TPMTlCN2jfztxcjF9mVODwVBaKwE/Epg71bMLZgFyD6yz1versrFOHdur+rrN68hHLQYUVMa1LjMWIxIFdTOCqDQDgoBnBVwYod84+v4LCctIj9Pfq5RlGgwBScXX5VfFZmoIv3RjDOE8h3y95/vZKYUJVwgZgbmF1ttrUmEfPT2CE3wdcWJwPIfVhC5iDZizdHF6crnWDNZK6a6FY2Ht6swDNkmkgeBaAwVDJcmUbxEU2JplXOTSOWel/bRswwo9Nk5ePfUiD3bTtfGfdZI62uk8q2uTWqDJ5la6kmRg3xR+l7SmrOtlharkPiQyXoJVM2BIEMDZXafxj7yOM8HidLSgPZ1Py2J1oC2ckbs3/koP+iMACAs5xsWbf2Lgkq2/dYEJKqOUmZJNUI0zFlVDiM1wlzVpYZ+Kxe+Eo/DEI1o2yyvp2zBdUgrvuePRT/Yyg==","layer_level":1},{"id":"53870e24-e630-47cf-84ed-d25800e57a3d","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Configuration Management","description":"architecture-backend-configuration","prompt":"Create architectural documentation for the configuration system using Pydantic Settings. Detail how environment variables are loaded from .env files and validated at application startup. Document the settings hierarchy, including API-specific configurations (host, port), LLM parameters, Qdrant connection details, and embedding model settings. Explain the benefits of type-safe configuration with automatic validation and error reporting. Describe how configuration is injected into different components (endpoints, RAG pipeline, middleware) through dependency injection. Include best practices for managing environment-specific settings (development, production) and securing sensitive credentials. Provide examples of common configuration overrides and debugging misconfiguration issues.","parent_id":"46d8f312-3e2e-4d96-ad2f-489706023fac","order":3,"progress_status":"completed","dependent_files":"src/api/core/config.py","gmt_create":"2025-10-24T18:03:33.094972+09:00","gmt_modified":"2025-10-24T18:16:53.754845+09:00","raw_data":"WikiEncrypted:EPw1VhZSv2AMLpYzHbCG5YKLuEH9TMUeG2sR8vPktEybnZ/+7S99jyFin0KVq8sc4vknAfy1y3vDjhe8IEpjTZW90bEm8JX7Ge7/7pmdpGWePLnz7FN2YZl+LJfiEQrKNtFcD7Qj81iToKVznaIvlfRlNYHKBWiiw7f/mE7pcP6rn9jngRL2HvZeFrON62GSeMKFIUzjv5/obMzMhV4HD0vNOuFFMEx94jkiqDV03MPKiiYBT4qMq9qQxYvMc2H7xR3MFMTacxveV/BiokwAZXfWE/d2EMWozt/2Crrbp7LcW/HoxqfR8v4xzyC30tCYtxL+NxhbgmGWx9NyohLy0t0bak2pbwzgchqrFME5oue2nOiZtZ3St/J0rv2SzbByuKNotfRPv8xFZ+O2a4bMW0a+3qvUag4wFpfy/c4MQn7qghap3+Fva2ALKMlz/X9TQ7Mxsb4b4WiaemgcesCXXUfQXkvciNucFBI11H/C200vUXRKA2grNCoofT5t6Hxr4tWhjP/hQI28WC+iw3f7uO9tdd3kSvVV67tInJK7cS4Dfh+3rNqCT/56L8pwXkfC1a1s8dS4zqbiSsGYom8/lhyGonqbhM1YHzJ4zOzbnAuAulVmvCWor0X3MShUoCOolOyhy6AXR5zTJrQxQRi3pjb+p+pbY3+hMePHQRYZUDajWikoC1ntRuR5HLtrnBXgGDQeJ0GBEcUjoNu2BiwskbgtOES876+3AH2UyfsTuz4mRsdOmrYmP5i3HTGlDYTGP4Sik59Zfe7TyauhLbwbuEuj/1JCQcZIb21m93X8qhM0boITKx12RmCtWghsTRchTVPHpBTUFx/SnzQx4V5HeYhTgS7h+7v0+9T33RCCYZgieD22JRsrNXFO3PbYHYB4f3Cjo1ClPKOwcQ6mFyKI1W7GpqIT3wiQbm17frb9FZ1bFg5J+JgyztWGHAyCW9ECChuc8Z5ilmbOtXxtWPU2mn6E5YsF9eLokH1K+zF0EeexSxGUY7Gqsdw4VM5Kz2W/09Maog4vRlF2JqrZWnEEexuxZ80b0c4MQrjCCkOCK/4hi3n1HXEN43eeczSbL2y28pMUMg0ede/nNNGkOVneeVVOeWCur/BMaVpp8J8Dm/bBQ+WoFsF3R4omaR2JOU4zxzQcVtIkjlmxiNlNw3t98otFdGKWDKh9MG+KktIVKBfr7nAr1EzgSpUmjfVMcML+iQjjB6qUpqPPEUv+HnhgEXgr/RoFdC36Kkpa9bKLtj0SlkzTcXgrsH+Vl7voRNzNGBS29KhKhaUCGuvfaqfEiG8bSICRWmbb3kO0UIMupIs4BOSGl6JnKQNR7mBpVtiPTHg4s+ZX6JpTEhFY3t3fBlmqYV6FYhYPQvEgexutbJ3IF0yarsbOtxBKXwsly5yDXSUHCc1Y/1hH+wJ2yPV+nw==","layer_level":2},{"id":"67eff8cd-9174-46e0-8007-abdf6df59fcf","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"API Reference","description":"api-reference","prompt":"Create API documentation for the FastAPI backend endpoints. Document the POST /rag endpoint including HTTP method, URL pattern, request body schema (RAGRequest), and response schema (RAGResponse). Detail the Pydantic models with field types, descriptions, and validation rules. Explain the middleware implementation for error handling and request logging. Document authentication requirements (if any) and rate limiting policies. Include example requests and responses showing proper usage. Provide client implementation guidelines for integrating with the API from different programming languages. Address error handling strategies with common status codes (422, 500) and troubleshooting tips for malformed requests. Ensure documentation aligns with the OpenAPI/Swagger UI available at /docs.","order":4,"progress_status":"completed","dependent_files":"src/api/api/endpoints.py,src/api/api/models.py","gmt_create":"2025-10-24T18:02:30.158015+09:00","gmt_modified":"2025-10-24T18:06:05.214299+09:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg+WPNa2UHH7yP2PPjE4/OPlAbu3AvGLNlwH2YbJEsK2ZFah4wHB5r1ikrL2gZxnF1LoCL+tq+mo31HcrmEWZ2JVYREVjg5FZ6wXGD3Mkmf4YqYAMRWeITVEfpzOq9+g1j6xYZHHZenKiuQHHfA0Tc92nY5K5u7a32x+Wfk01PQLdLQ+nv4OHg0qbrBMxEZZ1gqocJasB7QoGajs8dTl7SOtZY3nVTYRSVcjlHpkYtLMkJ+C9IL8Zs2qPj08yGtQTLwL/Cl/uorYHbsDY4UM8uwV9FvZvZ41x9QXrzkRbvnB7VlHudhHAlPUrTa1GC9TxtbJ36KmQAuN41YJdKiDwbJtqjNxw/IB1XREDCk+bSR9YTELUAn4pIvkL6ge8EhKUPc9RCjuY7nP7g7tglitLiHkn0yYxYxhP4yKaYDxjnkDNM4GTAXsqp48Z/zFPLY+LsI0zUcH394E8kOHs2/aSOEBKxqrwp9ZhqwckEhbJ9/Hbqg5vEmt7iwmM4r5T5lCljWtkweqKm10FtTURdqMOWvctW5jxpzrrjOdtqFJaN9cttIbRqGy3G2UWvPdHTv/gL6Ps++2vjX0HSkBl+1cxBrmGQ18tfGefs91sz5ZCNyOZLX6VusF5JF9k/IfET8FT2dLU6lEF8m01/IrxNOsqHJYsqo7+9OE8j14dXjw8+EmyjLhsedbqoLG0qCB20dRbxA0Onm5Mc+84vS90jF9FxJtNJSf/+1b14a5OYLPN3lEawPzGiinFizbtnjKCvRQqPN85BRz3G0N75diivgrtwnflPWe6Pd0/yqpl1hTvaORUTkYg8T37UubcYcjxhkYwA+O9gFuc6P2yxPO0c/JA3NYuNAg9/odpQh3c9k9HjZTTrlXzxsYXz4iOcghkzDlGKdRsSj1Fc6tBfqGmSIZz7NJ6nXNT57w9SWQOaTKcQJYVBNZ/dgoQU1pOkEXVpty+JCh7bd62L2uKGhghmDstNt61Sv49hmF/SG/ShNrB64nW8g3Gattvs8YXPSRm8cmdM3ynQI8auulosEJViPChkIy4kb6FnWwes+1vXqqwV00dFfkBhVCSAui2IY+EYZLUH4jo0etfRGXcHOj9lj3ZJRpRfo6kMRO3aexa/zQJ9t5ZS2uiG+9VmCc5M+jt8abXDzW52DK5W8cYl/09cnmBSbcVnnyqFra0MO9RtwM3prwSzFU2va8KyIz7XHCtoJjypeyUYQzIEedPgNn80VnpAfTz1eIfTq8oTPHSJaD4cwbDuLvBpwmZD8/6KcpzfvmuZtVQ7IR8WUGH/7+wt3NTImfcjMn+/pVmt37bdzmzEhIimKlLN0M23a0wOcToeogEb07o6UIrTtyEWfkXolAuzjykM63cngwEGZnB6ER15GocFjb/whM6jxXLLB3xpzhDmw=="},{"id":"5903b0a6-8787-4f10-9d44-652295de929f","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Development Workflow","description":"development-workflow","prompt":"Create comprehensive content for the Development Workflow section focused on the day-to-day development process using Makefile automation and Docker Compose. Detail the 'run-docker-compose' target that builds and starts the full stack (FastAPI, Streamlit, Qdrant) with uv sync for dependency management. Explain the 'clean-notebook-outputs' command for maintaining clean version-controlled notebooks. Walk through the complete development cycle: setting up the environment, running services, making code changes, executing tests via Makefile commands, and validating functionality. Document how uv (a fast Python package installer) integrates with the workflow via 'uv sync' and 'uv run'. Provide troubleshooting tips for common issues like container startup failures, dependency conflicts, and environment variable misconfiguration. Include performance optimization suggestions, such as selective testing and incremental development using the notebook-to-production pipeline.","parent_id":"4b430710-e83e-42b7-99c1-6cefef190425","order":4,"progress_status":"completed","dependent_files":"makefile,docker-compose.yml,pyproject.toml","gmt_create":"2025-10-24T18:03:06.140132+09:00","gmt_modified":"2025-10-24T18:15:24.486419+09:00","raw_data":"WikiEncrypted:F3QgleoEfoy16cQggYe9Czfqaqo1gAmvHQcnSrNK3einUABLsSCloeGqrP6SdFS0zUakxLmRPUL6anlMllMDgmHCVMwT8sIbysAIHx8JwreR9dkHNkNvLChxQE5YjUEHeD+e9zuXoIIVyMwpTVZB3GGkM+ZmwkbuTZWDiye7Q1df2fBydgLJ7O92lMcmMuALR0Hf8aDYeTucvfENgxrX8E1JkSggL8FR6DUkQ1I4gusY9Lk4VD+kHcgNbTL2e0z/qIC4gyhirWkLJBDVaVz/xKJcKDEG70PtOooLhDSgOS8LAYQoBLGXybIo4VVqXnu0FPkNGvg2bcYJsK9Zmnlu75S+APdp8Zg1nDDPpH47XYcWHY5Cq9fERDhoaPsDRAHYzy63+3FP6mjyFGAv/6BEPsv0+f6AWSc7/2zgHqC5hKIwWBqYSctEJ5ElK/EPlHtgmYdxVrRWXRMoyVBskrm44q92Dr2VsujLBir+R/NPACbAlIdlaaeZiAsAS72Tsk8878732phtUvH4upjhs8U2LR8sEYN36NOIjsoXfvYyQKo5XPPsXxM+0GyQ+wkTABfY03i18fbi4+WpXl3joxivYrQsGLNAO0H4RJFVXZAm+kKjGpspm5IIOx66DwtGyjcIVytUI4zU9PMfkNzOXwuJsDFasQGmeNQf/wtTeQKcWXLmefWbx9CQd2QESt0kJiHqH9qBw1Dhhg7a2xcEphj12gDlInzatg5CGVxKTFCTKMoxHWkPfA+Ub3kY1vkGWXeuBUfeiu7I5QzMOX9WJpDODH0kjXtQt04sfgxl7rjRe5IL7tYJRccl6yPBmhcXEgg795KrSaPrv+58e/c2gKLkZVQaviIc4a96LE4iI1RyWnXe5Sn6E2MQHaH3xppuPdTXlXWRm1a7jeLYc8B6mtgQHTJeZOb8A5+X6jtAmoM2VDa0VPA2SAWCFpmh7IALy1GPFWr4nAX7sozgwzGYRZIqD5sRxGVL2pXtOsl1icFLSWzk4Qwq2q+7VwL8IbPjngqhXYNQAch7moooDKjeyrfDEgM2coM/x7l0/P2C1bxTeWqezaR1jbrZq8/egRYnsGwvnKzPTjm5WqxL1nsAujx4BIkl2PwPGAAGgrxWQfcoJRwUSHFnFVBZzm59RDjkj6ufz4kHtYWjrJFj3jmGNaHjkm0HVfS5lugtFMfgpxmVYqtfSNqMOxn69wgjcw2RPUe+tRPSu0yxMXNEvp1OaX1qFiYWbnVmW8c8oIbKMIEBkrCnKE0pmLVItmtIBdADwFEuyXYKmFRE62yQM96JqzjAOHC0TQ9+BFXzY+lenWmmnne36/F2qjHFDDVYHzskOmYUQK0Us+wNVrARYvTGOsT6cmL5PV9CoicTWLMoSHJApY7zOG3/Zv6aMYs1fOPHp59JFH93OPxI06MbgHEtS9lJqM+J86AZ2cNalcDdUTQmaN5B1iO558ZIBbmZlnVsHj59Nyc9z4coPJaZtHghYIJLf3Z47J+KnGxsfbMGu02cEXlaMBWtf5u6ShsmEwIx1g4bbOgDGl5UzwLgVwMZn2HKS5ttq+F/GCVtB47FHJYnfjk5wgkBYad9ETLwf9Sy2wSKYyH1G/Q5+qaEFTZocbLwNZvmU19c5GpZZtooR2NPj2GfyjruVWmWzYf5jkk2qsXkIXMOiUzTmSrwOg3n8dJf9g==","layer_level":1},{"id":"00d02c5e-4579-484d-89f7-57386fe7e491","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Application Initialization","description":"architecture-backend-initialization","prompt":"Document the FastAPI application startup process in src/api/app.py. Explain how the FastAPI instance is created, middleware is registered, and API routes are mounted. Detail the application factory pattern used for initialization, including CORS setup, request ID middleware attachment, and router inclusion. Describe the role of lifespan events or startup handlers if present, and how external dependencies (Qdrant, OpenAI) are initialized before serving requests. Cover the main execution block and Uvicorn integration. Provide insights into how this initialization sequence ensures reliable service startup and proper component wiring. Include troubleshooting tips for common startup failures like port conflicts or missing environment variables.","parent_id":"46d8f312-3e2e-4d96-ad2f-489706023fac","order":4,"progress_status":"completed","dependent_files":"src/api/app.py","gmt_create":"2025-10-24T18:03:33.09575+09:00","gmt_modified":"2025-10-24T18:16:56.882732+09:00","raw_data":"WikiEncrypted:EPw1VhZSv2AMLpYzHbCG5YOk+O1uHcNIsTMRdzrI5RDWG1pIvGPSRGhP7oMh3oT5pfa2aV9za53+gI0rSjJ+goaIK4uwtVaXi00f+qfZLokK6HCiBYeUo8xsDgu/r5bH4m3kZ/cTR9wJzyJSyGaI1Dvc/eUCtBJHwD0NtwRUnX0EIhWsi6mqWdXlZIcdgOZG6jfxHsEh+RWizbqJVzHpU4uehynD9Yw3UyPVnkUCSIqHCMKTlY9Pb88ixGlPy17MurDglu66YTG+wynWgq0nKFkmbk40FTu+e3GrE9DhQR7SsqiHzdXnsAk8aE5mzf8+VfnUpEI1y5IyBHI8QktoaHckNA+12ae36nFMsVM31q+OZauY5xQm5JiOrZzMdwNkldMWjw4OVesdvWOfmK5NOG65m04zw7QNjyGB7J+bos3T/cGagjRsw2KVoRBgpCXwMhoc5bEH7TeVLJe3ZqcTE9sBmlF5u4LrYq0OnOWRb1mmUTiEiMEwfITQP1LBc10ugJXSasYp1BJ588slorQS3jUTzGPRHSjpKRUnJ4UAGgjRx+Gi22mCIjEPYEW+55IlxJA+TysRmEVG9MDQvQwW82SFUK0aukxNBoRJ80Twolvyq1YXQILQOAdBwHSsqKch0ExF/yqhKKBdS7Sjc2GArbSLZGmT7UQu9RvxkIwZgH3LuWuuITwYGcbd6Nk1CMhUvLUQKuyFTM/gGbMTKhefzpRcZlH9dCymu6CN/frDnC5+O+tLHl1SHV594hrqOEKBvy8uvW754r05SaNRSjnx6Jcll1n2b1meJYLfxDmfBfniWAKJvVoLF8yWsMII3Dux6N7qFFHAGA53hP/lkpMvCjIXbomsx30u4R9eCNDEW8njGU1VwR0hGJLCUdPTnOK+F/RHLOCGWuX0kecCOjUcNpzyIaN/puc78CiDJFSqwfUCqRDzoe36P842FoNKEarIvbJFiXak5jMl+hZFiRnq7NQR9mmm33nzuY+CNPhX7Q20OTpMfar7cvwgS3GI0eJe6NkpiKYnbx6O8l4SXDcbe9gwsC6L9cx+R07UZqhbqBQ9h0BU9KKuoFlOGZcCnbo9F2l3+12N9MEl8+JNURRYUxLkAAiRXKG246bY/NJc7yze9Dss/nnKkTNVuiPEd0DvG3gIaC8fKby3bl/KC8d5IIym7krHQCKe3rPr2lYQzvzQfJTy4YjX6OmxVqdMNO22woejnPHEcRFzLDO/AOhh7LypGJQfQriTp8VGIBtag7IE8khvc593cjsYQdDQ8XxvxcS5CJX0i5jMw27rWWARffNSFkz1G5cuV9ng9K/sEIg5TPkmCTBmfxZ5DLzQyWDt+5bT+Nq8XvcdiXKcjAf40+c53uS+2ZWXhCwG+AtfPRo=","layer_level":2},{"id":"4b430710-e83e-42b7-99c1-6cefef190425","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Development Guide","description":"development-guide","prompt":"Create comprehensive content for the Development Guide focused on contributing to the codebase. Explain the project structure with src/, notebooks/, and tests/ directories. Document the use of Jupyter notebooks for prototyping (phase_1 to phase_3) and how they relate to production code. Detail configuration management using Pydantic Settings and environment variables. Cover testing practices with pytest, including fixture usage in conftest.py and model validation tests. Explain the development workflow using Makefile commands for linting, testing, and running services. Provide guidelines for adding new features, including notebook experimentation, API implementation, and UI integration. Include debugging tips and best practices for working with the RAG pipeline.","order":5,"progress_status":"completed","dependent_files":"src/api/core/config.py,notebooks/,makefile","gmt_create":"2025-10-24T18:02:30.158601+09:00","gmt_modified":"2025-10-24T18:07:14.443182+09:00","raw_data":"WikiEncrypted:F3QgleoEfoy16cQggYe9C/ucQxiwh0okVA48AmODs5Szbt24MRpdYo2LFNA+b14p/t+/eH6Nvm1ImUHqBDK8WDvW5xxSxXUkMhXJYGKsqrHJYcDFLr4Vnln/CWJ655tvz3Lf0r7Tv64xckslebpy5bZLEQhtrld+3Lo8mF7SFhybBQShB/2KbAAmrWaN0tfMyk+oHWtwLMS8unjXwJ5MKboTAuvPwk/0RQZzTBJdHOfPD3CRiLPYQgrKhc9bP9byWyhSumexhnmocNKGiQ7dNgl/Q5LcCE6S68lvy05W9a0d1h+WP1Y0tcqhHh/izKgUqhixFozcVI1WNpxhLORcQR7ETgdFCCLZY7lyIvjo/GlS1Wb8TNvR1OJvmRy8WZTaz4PoFTeD66fzKFlRyReyiGSZmARlh/sSYSR32MDCOhl5bcp7EoFZQOShcXp64yTNYV23iTgjxGSntl7IltVrxJp9KPuH2mFJdh47Kg0riWPr0b9mcknz6xDpVdpx1qU5/r6bA8IVdGJlHCc0296LRK72Zlqu0G8ZsHz7Y3qXOWPAlXkEaTxCpnewKZvC4awNY/tJoPilpkMjSXwPrkRhbax4y85Mk35A7TP655ACdCovblxWqT9h/GcbuoTPmze388vxErR68OJYb0nobncyrhOFdXVAIKM1xfUVrFyUlaLaHdMA07hQO23RVNA6Uy5wbLmA3fCjP4tH/EGmrqZm5COPbjk6qZS4AOO3+wIxD33LZsK+xeyUqJzj8cPkyXpd3ik+WPiIFKu6ynJ/3U5pCzGBXSh0NdWPdGTsFtOr2vCTjhS6uVh/tcC3ik1b4I8wgg0Iyzf701RUCSNzJVDpnbUiNJE+u0BqVJSskbHuPSfx+4yixwcw0/TqK98Jsiu/Gft+OdRwaUjyM/zPzd1l5LorzuBBNcyOrv/fbxr6I2yqJUyWyBtGJrUc8qGZQwT15DJsm2tBAk/+GIbyOp2cA9i1H8hycquqcUzmcpiRlnKcVXgzl/bjg/xSZYV9RxIJdYNKOs1lvT7Cyvx9yXeOB/z+8ehxEWVhm1h3Bie9eMj1kbFIqHm3rkBf5GYgH+RAMWHbCf+xh+YI6klSCKIfId8/IjBaicr6/A/fJ5elwGmpeM/WZ7jr7fBGkLmUqkA6+/Q0RfyT/mpgD+8dO3KijmY35Mi1zT4ZzmxNI3kepvDh7xAMYJTftujYxSZ6YVXv/3QV4coz1OsaFz8NNMIVQLRjpDOGPx41hQJieXp9gQhVtMG06KniYu+WmJ7MJuFG6JxV0Riw7Ek8eG5Jnw7Vx3akWlkKJWd2lOiJpVRn+lidduFQQ2YnPVvXANM0ofJlm/FZCnwlLcKJ2uFUU/MvbnaEGZBOUXSQWwEUEOYiXx/Vq5BrzmE6BBRpGxmeKZ79m4aIAhE8bIA+pKS9qOC0Hvysxp2kUZQSPqtY6xCF06/1awNI2SGCgrumIlGd3ra+nZt3qXDwIR4DNzDYWSv3KA=="},{"id":"dc96fe26-acae-4d06-8ff1-632a06506d70","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Evaluation and Monitoring","description":"evaluation-monitoring","prompt":"Develop detailed content for the Evaluation and Monitoring section focused on assessing RAG system performance. Explain the evaluation framework using RAGAS metrics including context precision, faithfulness, and answer relevancy. Document how eval_retriever.py runs evaluations on test datasets and generates metrics. Describe integration with LangSmith for tracing, monitoring, and debugging RAG pipelines. Cover performance tracking including token usage, latency measurement, and cost analysis. Provide examples of interpreting evaluation results to improve system quality. Include best practices for creating evaluation datasets and running periodic assessments. Explain how @traceable decorators enable observability and how traces can be analyzed in LangSmith for optimization.","order":6,"progress_status":"completed","dependent_files":"evals/eval_retriever.py,src/api/rag/retrieval_generation.py","gmt_create":"2025-10-24T18:02:30.159286+09:00","gmt_modified":"2025-10-24T18:06:45.623968+09:00","raw_data":"WikiEncrypted:/J7fM+XdsLpljNvkXjrHrLKH7+WC51EPx++LzhiOYaVLn7tLKE2C52HHIOnl/5MpAFIl9QD8kKRNcb1mv4ASrlw33KO9brCX+Sm4LJy3RnV/j+zCQM9/glsuCHJBvsJe5xvA+qegUQlYCjROx6HSu5V0eKTu6nK+fV1wkzLYummQO3ILkBPenGDL+QMJOrk+99qvUhZWNKIryTAWzQZasHpyXcjVru0AmdrwIlS+ajmJMGv0FNT7/MM+RcLD+A+cFQaCMF7WeIFTQ5Rr5unrmgr0D7nq2erqgq9tkA6pikQ7od0tdhUfswW2HKnkBScmIiXorNsmqV5h1YHJuyGnOWKJbD6RSnHQqg09axoNj2Y7kHbB/clBrc/LZmj+/EAOFu+FjEuzzkrsoiq/PgU5nQO5ON/rZ8jHiQG93nnuc9qqeRhq0ul9qPO5xlQ00yusPEHGJRJhLW5be6JTI3Onv+5E4yIqGZ764lDKYCtIS+00NGLPEXblsupjMqxrDDz5M0IiDYmIjmQMivMTGwne3F3dhwD4r5NlkB1e+ZNdjncmCEb+6GyeHrs3ST1bcousZ9eW9nU986R/6b+Thp21X7BuzGdqHSnnTW+mB+ZOnIzPHwZGSKFRe+O27aymQ67MiL6cvKRy8RReMfqQX5CH+ViBGLR+7zB3vc2osaYxUEuHyMose7LqLCs1pRD/spUv5QUqTJKpYjKSHnP/8ySfdmzeGcZnuqzkyPfnpj2H3a6hkTQERKUzHUsSCHw6s0lPouoMEGOghhz0NHjJM/nJdBhFhDdJ3+TzDvMxXl5oYQ9QNly95Yah3AWuTHCg5z8PfhqO1ebP+PGFUVE50+ZA+wGV5pzg4vfFbtFZ2GnmSvyFkpii5L3TFGCgNfNo3Mrlk78a1KLmob4PrvoFvAdIy9W0J2qldNrxzjD6By3m/3Kt7wdW5+CKFmx0nbwE5gfNvpi5apnbBn4AUWr+QhbTMkI9jaYKzchhAi/V8493pyk/O/ZQqQwalgzjo3IQdnsN608MTcHKK2XtrMjoRQCHGX+647/mP8u0ryT9lypN0dSzaZEimzNMl2+/CkDmlfCohKW2YIucB0X0eXxAiQZj0UNXeTAMT9chuZ2+YBWTL+XAvBuqoPqOpr9lzLrYS15d0ZlHrNG9wni96fkDpkG5EE3ablOqJrQ83DnMFjXbqIT4DqUI7WB8T8t1MK2SZIvcCBMTLWrVmGOso2rZIk1QG3l0QeM+NS1JWveKiHIdS4YBSZEbGK8FTLESXBjVrml1QtufLhzCi+G97MTqtivfAxg0mlGTG1vyIBWjjyWd7NIl0SbXQVqgPEocz06LDACTDB3J5eVrnQqjLCKO7r68xnmcbyLXBYVfyP/m6QHrXpNS7QoWSwo1rXwlOonZCBV3gHftrxaujGkHXEoD3WuPR933Oqs/idWU7GQ8d32q/BL99CROoD9vMkArFoUzf0AVA6mH1ZSLtaE0uEKEh9tPsZSSKy5WvzjbH5msXKaMRHX1UkUqbo1pB6xaDq8op9F6U1HT/1etcj2X74PZj69JWA=="},{"id":"9da8dd7b-d46b-4d02-83d2-513b804c5540","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Advanced Topics","description":"advanced-topics","prompt":"Create comprehensive content for Advanced Topics focused on optimizing and extending the RAG system. Cover prompt engineering techniques using YAML templates and the prompt management system. Explain hybrid search tuning parameters like RRF weights and BM25 vs vector balance. Discuss cost optimization strategies including token usage reduction, caching mechanisms, and model selection. Detail advanced RAG patterns such as query rewriting, step-back prompting, and multi-hop retrieval. Include customization options for adapting the system to new product categories. Provide guidance on scaling considerations for larger datasets and higher traffic volumes. Address security aspects like prompt injection prevention and API key management.","order":7,"progress_status":"completed","dependent_files":"src/api/rag/utils/prompt_management.py,src/api/rag/retrieval_generation.py","gmt_create":"2025-10-24T18:02:30.159825+09:00","gmt_modified":"2025-10-24T18:07:28.397692+09:00","raw_data":"WikiEncrypted:qSUmbhu+RuqdVWUcJ+wGdyVAD9Ks19xuWOYgkjDNvKBwFZN2dDegGRt2vZTJRk+Ji+Yjf6JStqPLVhqLzlVOIG3prUpGnACAPk9EU0FSdudFI3vbYHMCN/8nh4kIbEiaXwWjqxex6/jV8Va1+OtTR0koUcw5dL+Fb3NdP6+HlLQRYyZmr8Mxa0HZKa9ioxHWGbZ2/zhalKnS41v6gcViL52aw0CS9xpccxciKvLJOsMaHIlVeeDFU16lmRQRDuU/u/ZXahUVwxLNjIYXrsJL0w6/Aky60AHV89KJjW1ulupB3QLlDaS2dn+JFv3ceT7vikWw1qo+u/clgddKW+1ssF2gmAEPE3/RIeGAW8Vb8WsHNBNNffqHcgnAog5WzzO0PdDKT8+p3iM2gpuMAIaKHllr5HW1c1wMJGs9QmrQqRSp9YfSY0U+Rl716JaX2giLcZzqZMz6G2SbHRnTz87dW2YlMWW6i+zO0pki5WQ3PRK5xuZQxWvVI0UVzbAg3U7k/rbwXOmCJF1ooaow5keOrZGxivOuhoE7CoQDKdWMCm7JL032AwRK2e61rKN0mDSkGGSvL6kJHPetV2vV4Okx6AkB0BrGvOLX4/sEldhI78SUuvFPBFTfkSAOldX20/2cbxtFmIEP2f90ljj1wIwH7NdaXYMiqYFo+OKLC3MfxqjCqg5ZLiZVrj185XS0RrWodkcxI08njTPmXXKf4mvqpb0l+JhDpByiP+vF1dfpTgomY4SnUt5BtZN+y63EK6e4V2PgF9rvt8rdJIJTBPfEvXoACD9TIbZz+2YkhbssDSZ3qRdKzvzX8Z7RDZ5V3q6qROSGIOC/vVAtR0zlDkKL0b9NkM0n2gS9tA6f54v7wBO1O8Q5bwu4EUF+ig20ToG3WANnjVUqrpFYAmcQaq33Ry2KrTd1/SAgeZ/zAWZBhEpgJ955WVarVp7sXbLqJ7/dCO3nhIt0OmWZMb6Bj6SSEfdoPZ7bQoRbteh72gTCWf90ntB9xgsbmvn15MfWvVWzdMGDzXPs24sHVPfY1Wu9pAfmqbKRdMaztwEZN4lIP68egpkj8jzQpqIOBdz53cYPwC5QJnKcUTwU5yUjip9btvp5aL0r/iug0be9NdrPHUDUnVdMJVvVueRbuqlNtESvgBzbj8SkwazlQbOwNdnVIVAg4h2j+5Wi5IrkIwyw7hQdxt6Va8sVc83jN13bnyuKL1WKLTIxlNJuC+3Rgh31xh2QH69P9gAziip1F24iRSSwwEwkJ2gy5VnQC5TL3PDNUH4O3pHKUTmTRi4Q43K87bIYjy7ahglcK+XO1RauYgQ7GQh0ik9qCcAT4xk9x0MyLXa03KMizjzuIUQ8XkXKlfXpDBJ1UvrqHTYJoj/HhJAIZZbkQx3srugRCtJPRF9V7xYsEPMA1/PkPRvwr2VHFZCR/33f7f72sV3vmzHHPtofMbvs60IHzeR+XCnDgPuO2oH15GtluDYtr/k6NH/DjA=="},{"id":"b60f1fcb-c5e0-4447-8ff6-b653cb27106a","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Troubleshooting","description":"troubleshooting","prompt":"Create comprehensive troubleshooting content for common issues encountered when running the AI-Powered Amazon Product Assistant. Document solutions for Docker container failures, API connectivity issues, and database initialization problems. Address common RAG-specific issues like poor retrieval quality, irrelevant responses, and structured output parsing errors. Include debugging workflows using logs, LangSmith traces, and local testing. Provide solutions for configuration problems related to environment variables and API keys. Cover performance issues such as high latency and token overuse. Include diagnostic commands and health check procedures. Make this guide actionable with clear error messages, root cause analysis, and step-by-step resolution instructions.","order":8,"progress_status":"completed","dependent_files":"README.md,docker-compose.yml,src/api/app.py","gmt_create":"2025-10-24T18:02:30.16038+09:00","gmt_modified":"2025-10-24T18:08:20.648694+09:00","raw_data":"WikiEncrypted:CaKOW8OSSWs4aEYk06Hu0hGGy7zXJE5t3XZJK+9x87U7MbBuSJQZj5VKy37lfAZW3q2vRlHn50goW+5RwQbDeu0wiz1OXruaLQbOoo1CkO9ZeTG9d9OmA0Ycx5NQ4WNNzmiBMwEuMeaF5JF1OoiWGg2n6yPGMtUE5KPALmnOG4nx8gb126PGEqRCb0IoGgHBZS1/I/xZXKlw2f+ivCOjkzdKsRreMVCKsxRd1xUQJlwnQFEGJkcUOnboDKFLLIhXkjWJU/763ao6vYQ89MeTO1zWEPilxZesFae9JRX0/VwyF2jpSPRP+uNQuGg/wuv8VMAtecsYT3YitnzTfECggmqWSITONIFGtWM9L3KpAONQF14o87V5TKHP1RxNUKBYzwNFBJbjtza7r24JFRyKUKf7wDGknguPblnrteHVIH8+XioZL4l+agQKORQq5JLA1S3da19Zo5ZxcvgBa8kaqzA9bUmHbyLpUbXGGvUn24mlxkkrH9zKWyuk8tmVaXeZtL/+G7sVdLilJmTEuelPX4Tfd45t0b1pHKzaTTJCOV+KKv8Zs0Ds9SRXUTEZq5kiH638EO8ndGcyoTR+H1WfcfPS3pkM1KOuM5ujdivGBanbYHPiZW3DIj+Y81n868vtG/lWn4T5i93zPNZJCp42HP0yud40pAcnhXeyeN8xXXgX1b263SCE08lGWe9tgCl57K/qNEB8/W80WoB5PtGx1ln0/wqops43wgItxp49JV1DfERQm5HbgIeQfOzVi1BgxF2FOrHQaDKByYZDxpyNLLQIzyNyH/ursmvw/+t7Z/rbH+qq5gl4cARrKan3v37zMMG5mRCmcJf6fx5QJzJ1WEtANE5SrKgv/sMRnM+jx43Nr/vhNqAfFI+esGV4yRbYzcWVxfo5wLHndRZzt6z+k9uWS70ZdC55YbkQusQc+xnnhUupQN2fq0Vg10k3QW+pe87WxAZr1ok527KfZP6drjNz35r4ArF/dwaH8GTGmc0ywRScqmCWE2Q8XrXL8IsNJQjeWgEAmmCt5zFw2RIqqL6topyqafW8ntF4LZOSdQtMjwCxLZXFTwRSFUjX330x5vOQQ4mR69RRa9D6/E4NkAbrp70hG6L07VghC1K19HFx5zHDDGXRqcm3isHwzLYnRsB329x7PNI0SlqqWW4+16LXGWTa5/mEC65tCM9UY6RwIeY803WDVob5U8k7ITk/RTIvdueuFG/gPlVs4Mc8n6slUevjpa/vvbsKvr3piXcZxOxnjs7ABXBN4TCX/2yHME4BNgY5sQXAR0CwsxWZ+YrmpRagmfcSUdrzRkF3X38Vt1dpsif72VLt5MeXvfTRBuucKApznYudZkUwoR5blN6CLtnuCcgoIaMQMjSIYg+DLQVKTJJijGApOTrZDCrH"},{"id":"67c8ffa8-a5d9-4c0c-86f8-5638614b72d6","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"Contributing","description":"contributing","prompt":"Create comprehensive contributing guidelines for developers who want to extend or improve the AI-Powered Amazon Product Assistant. Document code style requirements enforced by linters and formatters referenced in pyproject.toml. Outline the pull request workflow including branch naming, testing requirements, and code review expectations. Specify how to report issues with proper templates and reproduction steps. Explain the testing framework using pytest and how to write new tests for additional features. Include documentation standards for code comments and docstrings. Cover dependency management practices and versioning policies. Provide guidance on maintaining backward compatibility and deprecating features. Align with community standards and open-source best practices.","order":9,"progress_status":"completed","dependent_files":"README.md,pyproject.toml,pytest.ini","gmt_create":"2025-10-24T18:02:30.161715+09:00","gmt_modified":"2025-10-24T18:08:26.893232+09:00","raw_data":"WikiEncrypted:BxDZrTl5aGXx1MaECOB3NYtmPU3Pp7BwtpuTrRxBWuBgAn+XMkGXW64/zmbwG/YoIdsj7HW0+YJ2MBXbxcxJCaVKMoPKy44vKF3UesIxyBxsGd2qrIxSNpWDawahE6DvtfPNcv2nTac/imDh6Csc3Rvwb5hvx/fc+u1pzJ1hwSAIf2yfoA2k2EP7qYXFDbnNMEcV9wwryjAffGSgZSWxXsTuoP+iyY3yDyBgq20Gtc/8GYL9ssuzfWgFs2OOw4xM02w3IbFU2rdoccv6RhAVkL9pYciqp3uAI3+aFRou7bcVC8S7y70WoQvLEyDeXins8Ya6up1uMsN7Xal+M7mJSDhYDZqQVT1YQRrKfc4/Gf6VHBKWB4OjeUlkib6IyJ4/maUoTP/X3n/z1eYyYL7hqrMbwlF/oU4lucRXzjmuYfzNLZAlkKtr67XpBnlDq7lYVVwFJAIlMnoHUswA2iq9iEvQM5ILhq15cZCYLLd3ZsAR7fpZkHdZ31SylLgThAlnXnPgFhBF3TMxC4+v6NOpkOB3Ti6lCn0C/EosVWd6wxgQfbEl1LBsFhcwOoqCJLbGpCVCDBAET4muje/ro/82qyfrHYcLXAWfGeyEMROHSxcah5l/mrvwX6arOSQV4tIr1V1QFU4Qc0W7xByviUFMQCq1+FPR5fV3y5JQp6pVmiKAGqrJV4Xs8irDPQJVPG4Rg7VMWe1bFOHHzOra4Bud50Vhzi3fLmko4tA579EPtfbr9ZjxiFOI1xLpdEoHlaaRq7cA8eYzWp1DdYw6IcDwFB6KhOtNMEcxzUIcojU65vwyVGdVFutHCnxGiw/NaBV0XQBcqvBZR3uwBfCwog6gz77uxQnxQIQQ1kETUOs59+wIdibjpisJOzE2Qd1aYVaPNZjMnJPQ9RcJPAKIi7rz/veVgjjwUi+LKhwQYYagVDOJ9CHV6lLvbMZUVssQt+V/tU/mE5Tmr9TMcUhepxLV4/mf68Rgu6ThcrrjMI3eVyssueRnA6RBXvJYPytGvKK2JKqbpCZPYGL6c88zY11y1sOXrIEIIUdme3TFhKxdRgdVzynm14Tnh2m27zslzNxuPxQ1kXG8kjmJkvbf5bnAwdHO30q4HuxnWgjRGfOFB2vhJlhdHWQ6srPAyixSdLXuabeGIlhB4J8rcG30xlKedOOU2/JIkjB2az2sE/oZvvgA/UngaTbdreofb9aNSibkS42ZjQOhVBKGYj0RoKOoFdz4SEFo1NOvvaDl0u26lVO5gC4lXQMBGhXlb6sBo6Y78xUYYuJ+JYsKz820KQal11RvoPmSZo0UuLsmgH+J3umZtDwxk7DYKXnTiKOxdkF2YMuG8zM/N5gee+zPrKmDJ09TW4rjmXbIibqpJZu/DuaSilYUzzS0mQ+vEwpgydCXpHXOM8L7A2mcxyS6PVhI2w=="}],"wiki_items":[{"catalog_id":"d5a4275e-dc16-4108-b881-a96c5703e881","title":"Getting Started","description":"getting-started","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"1444c97f-0ad6-4eb6-8bbf-5e92cc793678","gmt_create":"2025-10-24T18:04:31.325317+09:00","gmt_modified":"2025-10-24T18:04:31.331057+09:00"},{"catalog_id":"2209cead-56be-4095-b1a0-8101d26d65f9","title":"Architecture","description":"architecture","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"7bd2d629-4bfd-4cf4-a0ca-23429a2c319b","gmt_create":"2025-10-24T18:05:03.933642+09:00","gmt_modified":"2025-10-24T18:05:03.93761+09:00"},{"catalog_id":"1efceeac-279a-4374-a79d-f3ed64f50ee3","title":"System Overview","description":"system-overview","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"8c7f49b6-ddbf-4bb7-9883-741fb1633b6c","gmt_create":"2025-10-24T18:05:18.306991+09:00","gmt_modified":"2025-10-24T18:05:18.311702+09:00"},{"catalog_id":"a33bbb08-d231-4945-bcc8-8ec66fc51cbd","title":"Core Features","description":"core-features","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"7eb72d55-3034-4059-9647-c9f0da4b4609","gmt_create":"2025-10-24T18:05:31.956428+09:00","gmt_modified":"2025-10-24T18:05:31.960727+09:00"},{"catalog_id":"67eff8cd-9174-46e0-8007-abdf6df59fcf","title":"API Reference","description":"api-reference","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"f0a3fa39-1b2c-48bb-b726-a4dd2e39ab24","gmt_create":"2025-10-24T18:06:05.211789+09:00","gmt_modified":"2025-10-24T18:06:05.214446+09:00"},{"catalog_id":"dc96fe26-acae-4d06-8ff1-632a06506d70","title":"Evaluation and Monitoring","description":"evaluation-monitoring","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"9ebb0078-f14d-4f2f-9aa9-95d67d3cc279","gmt_create":"2025-10-24T18:06:45.619653+09:00","gmt_modified":"2025-10-24T18:06:45.625143+09:00"},{"catalog_id":"4b430710-e83e-42b7-99c1-6cefef190425","title":"Development Guide","description":"development-guide","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"1fee7964-0e3b-4c71-9d16-e6d0f8ccff38","gmt_create":"2025-10-24T18:07:14.439738+09:00","gmt_modified":"2025-10-24T18:07:14.443366+09:00"},{"catalog_id":"9da8dd7b-d46b-4d02-83d2-513b804c5540","title":"Advanced Topics","description":"advanced-topics","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"6a99d88c-8652-4e2f-9eb8-3e610763b8c4","gmt_create":"2025-10-24T18:07:28.39462+09:00","gmt_modified":"2025-10-24T18:07:28.398097+09:00"},{"catalog_id":"b60f1fcb-c5e0-4447-8ff6-b653cb27106a","title":"Troubleshooting","description":"troubleshooting","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"57571848-d5bd-4452-b121-f3ca0f150c0c","gmt_create":"2025-10-24T18:08:20.64238+09:00","gmt_modified":"2025-10-24T18:08:20.649302+09:00"},{"catalog_id":"bf6a91db-35ad-4cfc-a2eb-cfddab786e78","title":"Hybrid Search","description":"hybrid-search","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"b2bd2039-bb21-4c17-bc2a-86c4daa24ec5","gmt_create":"2025-10-24T18:08:24.435896+09:00","gmt_modified":"2025-10-24T18:08:24.440074+09:00"},{"catalog_id":"67c8ffa8-a5d9-4c0c-86f8-5638614b72d6","title":"Contributing","description":"contributing","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"a4baf4fc-05fb-4cd0-9ea8-cf94fcf9a712","gmt_create":"2025-10-24T18:08:26.88874+09:00","gmt_modified":"2025-10-24T18:08:26.893528+09:00"},{"catalog_id":"f62bed5c-9780-474b-8dd7-b5ca61e16541","title":"Frontend Architecture","description":"architecture-frontend","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"7d640f14-9d35-41d0-a646-af6880620b92","gmt_create":"2025-10-24T18:09:00.548185+09:00","gmt_modified":"2025-10-24T18:09:00.552154+09:00"},{"catalog_id":"dcc77d61-638d-40be-80c4-acbce2bad281","title":"Project Structure","description":"project-structure","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"c569bc88-f95c-4982-8a86-e0981ccf490f","gmt_create":"2025-10-24T18:09:34.074147+09:00","gmt_modified":"2025-10-24T18:09:34.081455+09:00"},{"catalog_id":"4a4b70da-8fd4-4564-8887-e5a91c54c875","title":"Prompt Engineering","description":"prompt-engineering","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"029f2f7d-e171-434b-bf61-2c79dfbd03ab","gmt_create":"2025-10-24T18:10:02.084063+09:00","gmt_modified":"2025-10-24T18:10:02.089216+09:00"},{"catalog_id":"5f141d58-41e5-4f2d-b34d-83b4fbf78ab2","title":"RAGAS Evaluation Framework","description":"ragas-evaluation-framework","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"73bb2de4-3132-4a3a-bac7-c6d3003b71a0","gmt_create":"2025-10-24T18:10:03.174611+09:00","gmt_modified":"2025-10-24T18:10:03.18186+09:00"},{"catalog_id":"5a69bb65-5e23-48cc-b0e5-fdbbaa702c6a","title":"RAG Pipeline","description":"rag-pipeline","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"874695b3-f3f1-43da-9ae7-d2dd14e7f92a","gmt_create":"2025-10-24T18:10:40.491043+09:00","gmt_modified":"2025-10-24T18:10:40.497077+09:00"},{"catalog_id":"46d8f312-3e2e-4d96-ad2f-489706023fac","title":"Backend Architecture","description":"architecture-backend","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"a79dfa1b-0b45-4405-ad20-8799ce58433f","gmt_create":"2025-10-24T18:11:06.295308+09:00","gmt_modified":"2025-10-24T18:11:06.305628+09:00"},{"catalog_id":"06031f82-f4c3-44e3-bed5-780ff074e645","title":"LangSmith Integration","description":"langsmith-integration","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"9616a584-220d-453f-ada5-6d5f42527b13","gmt_create":"2025-10-24T18:11:22.795089+09:00","gmt_modified":"2025-10-24T18:11:22.80218+09:00"},{"catalog_id":"bedd86ea-abaa-4fc7-b85f-563a653a2455","title":"Notebooks Usage","description":"notebooks-usage","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"a7e7571e-05b1-4dec-a7e7-be43f30a2eb7","gmt_create":"2025-10-24T18:11:35.807864+09:00","gmt_modified":"2025-10-24T18:11:35.814267+09:00"},{"catalog_id":"ab7f85be-5187-4054-8c29-29057245cdbf","title":"Hybrid Search Tuning","description":"hybrid-search-tuning","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"b232f1bb-42b3-4ff2-96f6-04014017d51f","gmt_create":"2025-10-24T18:12:10.407997+09:00","gmt_modified":"2025-10-24T18:12:10.419761+09:00"},{"catalog_id":"b7726e41-386f-484f-9fd2-3da302cc65ce","title":"Structured Outputs","description":"structured-outputs","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"42f8e8a8-6ac4-4fb3-aa1a-a3521b44001b","gmt_create":"2025-10-24T18:12:21.297227+09:00","gmt_modified":"2025-10-24T18:12:21.301708+09:00"},{"catalog_id":"90126b26-d2ae-4364-971a-34a3d36337c8","title":"Data Storage Architecture","description":"architecture-data-storage","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"78779344-4fa5-4a85-9d53-8d7a4002087e","gmt_create":"2025-10-24T18:12:55.159635+09:00","gmt_modified":"2025-10-24T18:12:55.16437+09:00"},{"catalog_id":"f16fe8a4-aa07-4214-8042-630c2f316ab7","title":"Configuration Management","description":"configuration-management","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"5cfbc637-65a8-42b0-a7a5-ed58a4bb6a25","gmt_create":"2025-10-24T18:13:25.643354+09:00","gmt_modified":"2025-10-24T18:13:25.64831+09:00"},{"catalog_id":"e7818176-0020-4733-a3cc-60f900b06d14","title":"Performance Tracking","description":"performance-tracking","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"754ea300-d714-4fe3-82c7-5085b61876b5","gmt_create":"2025-10-24T18:13:35.467729+09:00","gmt_modified":"2025-10-24T18:13:35.469875+09:00"},{"catalog_id":"aad04681-8975-4883-9e0f-93e60f5e23d2","title":"Cost Optimization","description":"cost-optimization","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"3b4544b8-4322-4294-8fcc-8e7fa010d228","gmt_create":"2025-10-24T18:13:56.12403+09:00","gmt_modified":"2025-10-24T18:13:56.128697+09:00"},{"catalog_id":"8bec2a2e-4752-494b-9c94-743bf5730ec7","title":"Prompt Management","description":"prompt-management","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"a6fdac9b-a2b6-4aed-a9b4-6993877caaa2","gmt_create":"2025-10-24T18:14:17.072114+09:00","gmt_modified":"2025-10-24T18:14:17.082221+09:00"},{"catalog_id":"08174437-f64e-4481-837a-e3716472a840","title":"Testing Practices","description":"testing-practices","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"c9351558-4e10-4402-9ce7-3933e651c31f","gmt_create":"2025-10-24T18:14:49.328468+09:00","gmt_modified":"2025-10-24T18:14:49.334342+09:00"},{"catalog_id":"4151579c-5f3d-46c0-a623-a36df448f073","title":"Observability Architecture","description":"architecture-observability","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"ee6fcf24-8fe3-488e-b0a2-8323950fc287","gmt_create":"2025-10-24T18:14:58.039378+09:00","gmt_modified":"2025-10-24T18:14:58.04555+09:00"},{"catalog_id":"5903b0a6-8787-4f10-9d44-652295de929f","title":"Development Workflow","description":"development-workflow","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"6f88004c-830a-4fb6-9dd9-0d4104ce05f7","gmt_create":"2025-10-24T18:15:24.481474+09:00","gmt_modified":"2025-10-24T18:15:24.486777+09:00"},{"catalog_id":"d1960a4c-1eab-4696-9e08-041587bf2640","title":"API Endpoints","description":"architecture-backend-endpoints","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"b8ab5d57-9b6d-495f-9f95-2c5a29696a00","gmt_create":"2025-10-24T18:15:48.14818+09:00","gmt_modified":"2025-10-24T18:15:48.154705+09:00"},{"catalog_id":"08a81986-2fb7-45b6-840e-3f3d46b7cb62","title":"Data Models","description":"architecture-backend-models","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"43216d2e-367d-4fce-a93f-557427f4b2d1","gmt_create":"2025-10-24T18:16:07.983946+09:00","gmt_modified":"2025-10-24T18:16:07.987204+09:00"},{"catalog_id":"e64bf512-b170-4bac-89a3-db5867dc230a","title":"Middleware Stack","description":"architecture-backend-middleware","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"ab9d51be-017f-441a-83c3-9e2ad0677ce9","gmt_create":"2025-10-24T18:16:19.279738+09:00","gmt_modified":"2025-10-24T18:16:19.285498+09:00"},{"catalog_id":"53870e24-e630-47cf-84ed-d25800e57a3d","title":"Configuration Management","description":"architecture-backend-configuration","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"9d7c8cbc-c21a-4cbe-8cc7-32abae763b23","gmt_create":"2025-10-24T18:16:53.751074+09:00","gmt_modified":"2025-10-24T18:16:53.755024+09:00"},{"catalog_id":"00d02c5e-4579-484d-89f7-57386fe7e491","title":"Application Initialization","description":"architecture-backend-initialization","extend":"{}","progress_status":"completed","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","id":"724f52bc-5037-4d17-815d-00fd7bfac3c5","gmt_create":"2025-10-24T18:16:56.879204+09:00","gmt_modified":"2025-10-24T18:16:56.883096+09:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Comprehensive Project Analysis: AI-Powered Amazon Product Assistant\n\n## 1. Project Introduction\n\nThe AI-Powered Amazon Product Assistant is an intelligent conversational system designed to help users discover and explore Amazon Electronics products through natural language queries. This RAG (Retrieval-Augmented Generation) system transforms traditional e-commerce search into an interactive, AI-driven experience by combining semantic search with large language models to provide accurate, context-aware product recommendations.\n\n**Core Goals and Objectives:**\n- Enable semantic product search over Amazon Electronics dataset\n- Provide personalized product recommendations with detailed explanations\n- Implement hybrid search combining semantic and keyword matching\n- Deliver production-ready RAG system with comprehensive observability\n\n**Target Audience:**\n- E-commerce customers seeking intelligent product discovery\n- AI/ML engineers building RAG systems\n- Developers interested in conversational AI applications\n- Data scientists working with product recommendation systems\n\n## 2. Technical Architecture\n\n### Component Breakdown\n\nThe system follows a microservices architecture with three containerized components communicating via Docker Compose:\n\n```mermaid\nflowchart TD\n  A[Streamlit UI] --\u003e|HTTP POST /rag| B[FastAPI Backend]\n  B --\u003e|Hybrid Search| C[Qdrant Vector DB]\n  B --\u003e|Tracing| D[LangSmith]\n  C --\u003e|Persistent Storage| E[(./qdrant_storage)]\n```\n\n### Design Patterns\n\nThe architecture implements several key design patterns:\n\n- **Microservices**: Three independent services (UI, API, Vector DB) deployed via Docker Compose\n- **RAG Pipeline**: Retrieval-Augmented Generation pattern with hybrid search\n- **Observability**: Comprehensive instrumentation with LangSmith tracing\n- **Configuration Management**: Pydantic Settings for type-safe environment configuration\n- **Structured Outputs**: Instructor library with Pydantic models for type-safe LLM responses\n\n### System Relationships\n\n```mermaid\ngraph TD\n  Streamlit[Streamlit UI] --\u003e FastAPI[FastAPI Backend]\n  FastAPI --\u003e Qdrant[Qdrant Vector DB]\n  FastAPI --\u003e OpenAI[OpenAI API]\n  FastAPI --\u003e LangSmith[LangSmith]\n  Notebooks[Development Notebooks] --\u003e Qdrant\n  Notebooks --\u003e FastAPI\n```\n\n### Data Flow\n\n```mermaid\nflowchart TD\n  A[User Query] --\u003e B[Streamlit UI]\n  B --\u003e C[FastAPI /rag endpoint]\n  C --\u003e D[Embedding Generation]\n  D --\u003e E[Qdrant Hybrid Search]\n  E --\u003e F[Context Formatting]\n  F --\u003e G[Prompt Building]\n  G --\u003e H[LLM Generation]\n  H --\u003e I[Response Enrichment]\n  I --\u003e J[Streamlit UI Display]\n```\n\n## 3. Key Implementation\n\n### Main Entry Points\n- `src/api/app.py`: FastAPI application initialization\n- `src/chatbot_ui/app.py`: Streamlit UI application\n- `src/api/rag/retrieval_generation.py`: Core RAG pipeline implementation\n\n### Core Modules\n- `src/api/rag/retrieval_generation.py`: Complete RAG pipeline with hybrid search\n- `src/api/api/endpoints.py`: REST API endpoints\n- `src/api/rag/utils/prompt_management.py`: YAML-based prompt management\n\n### Configuration Approach\n- `src/api/core/config.py`: Backend configuration with Pydantic Settings\n- `src/chatbot_ui/core/config.py`: UI configuration with Pydantic Settings\n- `.env` file: Environment variables for API keys and settings\n\n### External Dependencies\n- `pyproject.toml`: Project dependencies including FastAPI, Streamlit, Qdrant client\n- `docker-compose.yml`: Service orchestration and networking\n\n### Integration Points\n- `src/api/rag/retrieval_generation.py`: Integration with OpenAI API and Qdrant\n- `src/chatbot_ui/app.py`: Integration between Streamlit UI and FastAPI backend\n\n### Component Relationships\n\n```mermaid\ngraph TD\n  A[Streamlit UI] --\u003e B[FastAPI Backend]\n  B --\u003e C[Qdrant Vector DB]\n  B --\u003e D[OpenAI API]\n  B --\u003e E[LangSmith]\n  F[Prompt Templates] --\u003e B\n  G[Configuration] --\u003e B\n  G --\u003e A\n  H[Notebooks] --\u003e B\n  H --\u003e C\n```\n\n## 4. Key Features\n\n### Functionality Overview\n\nThe AI-Powered Amazon Product Assistant provides several key features:\n\n- **Hybrid Semantic + Keyword Search**: Combines vector similarity with BM25 keyword matching using Reciprocal Rank Fusion (RRF)\n- **RAG Pipeline**: Retrieval-augmented generation combining Qdrant vector database with GPT-4.1-mini\n- **Structured Outputs**: Type-safe LLM responses using Pydantic models via Instructor library\n- **Interactive Chat Interface**: Clean Streamlit UI with product suggestions sidebar\n- **Production-Ready API**: FastAPI backend with RESTful `/rag` endpoint\n- **LangSmith Observability**: End-to-end instrumentation with `@traceable` decorators\n- **Evaluation Framework**: RAGAS metrics integrated with LangSmith\n- **YAML-Based Prompt Management**: Version-controlled Jinja2 templates\n\n### Implementation Highlights\n\n- **Hybrid Search Implementation**: Combines semantic and keyword search with RRF fusion\n- **Structured Output Generation**: Uses Instructor library to enforce Pydantic schemas\n- **Error Handling**: Comprehensive error handling throughout the pipeline\n- **Observability**: Detailed logging and tracing with LangSmith\n- **Configuration Management**: Type-safe configuration with Pydantic Settings\n\n### Feature Architecture\n\n```mermaid\nstateDiagram-v2\n  [*] --\u003e Idle\n  Idle --\u003e Processing: User Query\n  Processing --\u003e Embedding: Generate Embedding\n  Embedding --\u003e Retrieval: Hybrid Search\n  Retrieval --\u003e ContextFormatting: Format Results\n  ContextFormatting --\u003e PromptBuilding: Build Prompt\n  PromptBuilding --\u003e Generation: LLM Response\n  Generation --\u003e Enrichment: Add Product Metadata\n  Enrichment --\u003e Response: Return Answer\n  Response --\u003e Idle: Display Results\n  Processing --\u003e Error: Validation Failure\n  Error --\u003e Idle: Show Error Message\n```\n\nSources:\n- [README.md](README.md)\n- [ARCHITECTURE.md](documentation/ARCHITECTURE.md)\n- [pyproject.toml](pyproject.toml)\n- [docker-compose.yml](docker-compose.yml)\n- [app.py](src/api/app.py)\n- [retrieval_generation.py](src/api/rag/retrieval_generation.py)\n- [app.py](src/chatbot_ui/app.py)\n- [endpoints.py](src/api/api/endpoints.py)\n- [models.py](src/api/api/models.py)\n- [prompt_management.py](src/api/rag/utils/prompt_management.py)\n- [retrieval_generation.yaml](src/api/rag/prompts/retrieval_generation.yaml)\n\u003c/blog\u003e","gmt_create":"2025-10-24T18:00:30.650913+09:00","gmt_modified":"2025-10-24T18:00:30.650913+09:00","id":"ef3faac3-6d88-489c-a191-52151b698632","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e"},"wiki_readme":{"content":"No readme file","gmt_create":"2025-10-24T17:59:46.235863+09:00","gmt_modified":"2025-10-24T17:59:46.235863+09:00","id":"89e05d51-b3ab-4b45-85aa-47d4072e093b","repo_id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e"},"wiki_repo":{"id":"21d063a6-0d86-4d25-a5af-b7e23ccfaf3e","name":"AI-Powered-Amazon-Product-Assistant","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── documentation\\n│   ├── development-environment\\n│   │   └── README.md\\n│   └── ARCHITECTURE.md\\n├── evals\\n│   └── eval_retriever.py\\n├── notebooks\\n│   ├── phase_1\\n│   │   ├── 02-explore-amazon-dataset.ipynb\\n│   │   └── 03-explore-arxiv-api.ipynb\\n│   ├── phase_2\\n│   │   ├── 01-RAG-preprocessing-Amazon.ipynb\\n│   │   ├── 02-RAG-pipeline.ipynb\\n│   │   ├── 03-evaluation-dataset.ipynb\\n│   │   └── 04-RAG-Evals.ipynb\\n│   └── phase_3\\n│       ├── prompts\\n│       │   └── retrieval_generation.yaml\\n│       ├── 01-Structured-Outputs-Intro.ipynb\\n│       ├── 02-Structured-Outputs-RAG-pipeline.ipynb\\n│       ├── 03-Hybrid-Search.ipynb\\n│       ├── 04-Reranking.ipynb\\n│       └── 05-Prompt-Versioning.ipynb\\n├── src\\n│   ├── api\\n│   │   ├── api\\n│   │   │   ├── endpoints.py\\n│   │   │   ├── middleware.py\\n│   │   │   └── models.py\\n│   │   ├── core\\n│   │   │   └── config.py\\n│   │   ├── rag\\n│   │   │   ├── prompts\\n│   │   │   │   └── retrieval_generation.yaml\\n│   │   │   ├── utils\\n│   │   │   │   └── prompt_management.py\\n│   │   │   └── retrieval_generation.py\\n│   │   └── app.py\\n│   └── chatbot_ui\\n│       ├── core\\n│       │   └── config.py\\n│       └── app.py\\n├── tests\\n│   ├── __init__.py\\n│   ├── conftest.py\\n│   └── test_models.py\\n├── README.md\\n├── docker-compose.yml\\n├── makefile\\n├── pyproject.toml\\n├── pytest.ini\\n└── uv.lock\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"55f0e06caa306ffb3afc3dbf2b595bf8ffc5f11a","last_commit_update":"2025-10-16T15:43:47+09:00","gmt_create":"2025-10-24T17:59:42.125608+09:00","gmt_modified":"2025-10-24T18:16:56.965259+09:00","extend_info":"{\"language\":\"en\",\"active\":true,\"branch\":\"develop\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}